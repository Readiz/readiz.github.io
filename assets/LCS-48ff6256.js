import{p as r}from"./LCS_-81a584c8.js";import{u as c,j as n,a,F as t}from"./ssg-client-6b0220d4.js";import{C as m}from"./Comment-76aa46be.js";import{T as h}from"./TagList-d93ec40f.js";import{H as d}from"./Header-cbc3537d.js";import"./katex.min-4ed993c7.js";import"./index.module-caf545e8.js";function s(l){const e=Object.assign({h2:"h2",ul:"ul",li:"li",a:"a",p:"p",span:"span",math:"math",semantics:"semantics",mrow:"mrow",mi:"mi",mo:"mo",msup:"msup",mn:"mn",annotation:"annotation",code:"code",pre:"pre",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",strong:"strong",ol:"ol"},c(),l.components);return a(t,{children:[n(d,{}),`
`,n(e.h2,{id:"lcs",children:"LCS"}),`
`,a(e.ul,{children:[`
`,n(e.li,{children:n(e.a,{href:"https://velog.io/@emplam27/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B7%B8%EB%A6%BC%EC%9C%BC%EB%A1%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EB%8A%94-LCS-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-Longest-Common-Substring%EC%99%80-Longest-Common-Subsequence",children:"emplam27 님의 정리 글"})}),`
`]}),`
`,a(e.p,{children:["LCS는 Longest Common Subsequence의 약자로, 두 문자열에서 최대로 공통되는 부분 중 제일 긴 것을 찾는다. 알고리즘은 평범한 ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[a(e.mrow,{children:[n(e.mi,{children:"O"}),n(e.mo,{stretchy:"false",children:"("}),a(e.msup,{children:[n(e.mi,{children:"N"}),n(e.mn,{children:"2"})]}),n(e.mo,{stretchy:"false",children:")"})]}),n(e.annotation,{encoding:"application/x-tex",children:"O(N^2)"})]})})}),n(e.span,{className:"katex-html","aria-hidden":"true",children:a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),n(e.span,{className:"mopen",children:"("}),a(e.span,{className:"mord",children:[n(e.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"N"}),n(e.span,{className:"msupsub",children:n(e.span,{className:"vlist-t",children:n(e.span,{className:"vlist-r",children:n(e.span,{className:"vlist",style:{height:"0.8141em"},children:a(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[n(e.span,{className:"pstrut",style:{height:"2.7em"}}),n(e.span,{className:"sizing reset-size6 size3 mtight",children:n(e.span,{className:"mord mtight",children:"2"})})]})})})})})]}),n(e.span,{className:"mclose",children:")"})]})})]})})," 인 대표 DP 유형이지만, 구현 난이도가 살짝 까다롭기 때문에, 정리해본다."]}),`
`,a(e.p,{children:["아래 코드는 흔히 얘기하는 ",n(e.code,{children:"LCS"}),"는 아니고, Longest Common Substring을 구하는 코드인데, 최종적으로 구하려고 하는 Longest Common Subsequence보다 구현이 간단하기 때문에 짚고 넘어간다."]}),`
`,n(e.pre,{children:n(e.code,{className:"language-cpp",children:`for(int a = 1; a <= lena; ++a) {
    for(int b = 1; b <= lenb; ++b) {
        if (A[a] == B[b]) DP[a][b] = DP[a-1][b-1] + 1;
        else DP[i][j] = 0;
    }
}
`})}),`
`,a(e.p,{children:["사실 이 경우에는 굳이 2차원 ",n(e.code,{children:"DP"})," 배열을 쓸 필요도 없다. 1차원으로도 충분하기 때문에.. 다만, 굳이 2차원으로 만든 이유는 관찰을 위해서이다. 이 DP 테이블의 결과를 보게 되면, 중복되는 문자열을 만나게 되면 대각선 우하단 방향으로 이동하는 것을 알 수 있다. 또한, 중간에 서로 다른 문자열이 나오자마자 칼같이 DP 테이블을 0으로 만들어 주는 것이 포인트이다."]}),`
`,a(e.p,{children:["여기서 사고를 확장해보자. 0으로 만드는 이유는 ",n(e.code,{children:"연속"}),"된다는 조건이 있기 때문이다. 그렇다면 ",n(e.code,{children:"연속"}),"된다는 조건이 없을 때는 어떻게 될 것인가? 이 경우 현재까지의 최대 공통 부분 길이가 유지가 되어야 한다. 그리고 이 유지는 x축으로 해야할 수도 있고, y축으로 해야할 수도 있기 때문에 x, y축에 대한 ",n(e.code,{children:"max"})," 값을 구해주면 되겠다. 그래서 위 ",n(e.code,{children:"DP"})," 식이 아주 약간 바뀐다. 이 부분만 수정을 하게 되면, 코드가 Longest Common Subsequence를 구하는 코드로 변하게 된다."]}),`
`,n(e.pre,{children:n(e.code,{className:"language-cpp",children:`for(int a = 1; a <= lena; ++a) {
    for(int b = 1; b <= lenb; ++b) {
        if (A[a] == B[b]) DP[a][b] = DP[a-1][b-1] + 1;
        else DP[a][b] = max(DP[a-1][b], DP[a][b-1]);
    }
}
`})}),`
`,a(e.p,{children:["잘 동작할까? 이 의문을 해소하기 앞서서, ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[a(e.mrow,{children:[n(e.mi,{children:"D"}),n(e.mi,{children:"P"}),n(e.mo,{stretchy:"false",children:"["}),n(e.mi,{children:"l"}),n(e.mi,{children:"e"}),n(e.mi,{children:"n"}),n(e.mi,{children:"a"}),n(e.mo,{stretchy:"false",children:"]"}),n(e.mo,{stretchy:"false",children:"["}),n(e.mi,{children:"l"}),n(e.mi,{children:"e"}),n(e.mi,{children:"n"}),n(e.mi,{children:"b"}),n(e.mo,{stretchy:"false",children:"]"})]}),n(e.annotation,{encoding:"application/x-tex",children:"DP[lena][lenb]"})]})})}),n(e.span,{className:"katex-html","aria-hidden":"true",children:a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"D"}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.13889em"},children:"P"}),n(e.span,{className:"mopen",children:"["}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),n(e.span,{className:"mord mathnormal",children:"e"}),n(e.span,{className:"mord mathnormal",children:"na"}),n(e.span,{className:"mclose",children:"]"}),n(e.span,{className:"mopen",children:"["}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),n(e.span,{className:"mord mathnormal",children:"e"}),n(e.span,{className:"mord mathnormal",children:"nb"}),n(e.span,{className:"mclose",children:"]"})]})})]})})," 로는 가장 긴 LCS의 길이만을 알 수 있을 뿐인데, 만약 이러한 LCS 중 1개를 출력하라는 문제를 만나면 어떻게 풀까? 위 코드가 잘 동작하는지 알아보기 위해 전체적인 구조 이해와 문제 해결을 위해 아래와 같은 DP Table 결과를 예시로 보자. 가로축과 세로축은 각각 ",n(e.code,{children:"abc"}),"와 ",n(e.code,{children:"axbycz"}),"의 문자열을 할당했고, 이들의 LCS는 ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[n(e.mrow,{children:n(e.mn,{children:"3"})}),n(e.annotation,{encoding:"application/x-tex",children:"3"})]})})}),n(e.span,{className:"katex-html","aria-hidden":"true",children:a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"0.6444em"}}),n(e.span,{className:"mord",children:"3"})]})})]})}),"임을 바로 알 수 있을 것이다."]}),`
`,a(e.table,{children:[n(e.thead,{children:a(e.tr,{children:[n(e.th,{align:"center",children:"-"}),n(e.th,{align:"center",children:"-"}),n(e.th,{align:"center",children:"a"}),n(e.th,{align:"center",children:"b"}),n(e.th,{align:"center",children:"c"})]})}),a(e.tbody,{children:[a(e.tr,{children:[n(e.td,{align:"center",children:n(e.strong,{children:"-"})}),n(e.td,{align:"center",children:"0"}),n(e.td,{align:"center",children:"0"}),n(e.td,{align:"center",children:"0"}),n(e.td,{align:"center",children:"0"})]}),a(e.tr,{children:[n(e.td,{align:"center",children:n(e.strong,{children:"a"})}),n(e.td,{align:"center",children:"0"}),n(e.td,{align:"center",children:"1"}),n(e.td,{align:"center",children:"1"}),n(e.td,{align:"center",children:"1"})]}),a(e.tr,{children:[n(e.td,{align:"center",children:n(e.strong,{children:"x"})}),n(e.td,{align:"center",children:"0"}),n(e.td,{align:"center",children:"1"}),n(e.td,{align:"center",children:"1"}),n(e.td,{align:"center",children:"1"})]}),a(e.tr,{children:[n(e.td,{align:"center",children:n(e.strong,{children:"b"})}),n(e.td,{align:"center",children:"0"}),n(e.td,{align:"center",children:"1"}),n(e.td,{align:"center",children:"2"}),n(e.td,{align:"center",children:"2"})]}),a(e.tr,{children:[n(e.td,{align:"center",children:n(e.strong,{children:"y"})}),n(e.td,{align:"center",children:"0"}),n(e.td,{align:"center",children:"1"}),n(e.td,{align:"center",children:"2"}),n(e.td,{align:"center",children:"2"})]}),a(e.tr,{children:[n(e.td,{align:"center",children:n(e.strong,{children:"c"})}),n(e.td,{align:"center",children:"0"}),n(e.td,{align:"center",children:"1"}),n(e.td,{align:"center",children:"2"}),n(e.td,{align:"center",children:"3"})]}),a(e.tr,{children:[n(e.td,{align:"center",children:n(e.strong,{children:"z"})}),n(e.td,{align:"center",children:"0"}),n(e.td,{align:"center",children:"1"}),n(e.td,{align:"center",children:"2"}),n(e.td,{align:"center",children:"3"})]})]})]}),`
`,a(e.p,{children:["LCS를 하나 구하기 위해 우리가 주목해야할 부분은 ",n(e.code,{children:"대각선"})," 이다. 아래와 같은 프로세스로 문자열을 찾는다."]}),`
`,a(e.ol,{start:"0",children:[`
`,a(e.li,{children:["우하단 좌표인 ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[a(e.mrow,{children:[n(e.mo,{stretchy:"false",children:"("}),n(e.mi,{children:"l"}),n(e.mi,{children:"e"}),n(e.mi,{children:"n"}),n(e.mi,{children:"a"}),n(e.mo,{separator:"true",children:","}),n(e.mi,{children:"l"}),n(e.mi,{children:"e"}),n(e.mi,{children:"n"}),n(e.mi,{children:"b"}),n(e.mo,{stretchy:"false",children:")"})]}),n(e.annotation,{encoding:"application/x-tex",children:"(lena, lenb)"})]})})}),n(e.span,{className:"katex-html","aria-hidden":"true",children:a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mopen",children:"("}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),n(e.span,{className:"mord mathnormal",children:"e"}),n(e.span,{className:"mord mathnormal",children:"na"}),n(e.span,{className:"mpunct",children:","}),n(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),n(e.span,{className:"mord mathnormal",children:"e"}),n(e.span,{className:"mord mathnormal",children:"nb"}),n(e.span,{className:"mclose",children:")"})]})})]})})," 부터 시작한다."]}),`
`,a(e.li,{children:["왼쪽 혹은 위쪽으로 숫자가 같은 지점까지 쭉 따라간다.",`
`,a(e.ul,{children:[`
`,a(e.li,{children:["위 표에서는 ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[a(e.mrow,{children:[n(e.mo,{stretchy:"false",children:"("}),n(e.mi,{children:"z"}),n(e.mo,{separator:"true",children:","}),n(e.mi,{children:"c"}),n(e.mo,{stretchy:"false",children:")"})]}),n(e.annotation,{encoding:"application/x-tex",children:"(z,c)"})]})})}),n(e.span,{className:"katex-html","aria-hidden":"true",children:a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mopen",children:"("}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"z"}),n(e.span,{className:"mpunct",children:","}),n(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),n(e.span,{className:"mord mathnormal",children:"c"}),n(e.span,{className:"mclose",children:")"})]})})]})})," 으로 시작해서, ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[a(e.mrow,{children:[n(e.mo,{stretchy:"false",children:"("}),n(e.mi,{children:"c"}),n(e.mo,{separator:"true",children:","}),n(e.mi,{children:"c"}),n(e.mo,{stretchy:"false",children:")"})]}),n(e.annotation,{encoding:"application/x-tex",children:"(c,c)"})]})})}),n(e.span,{className:"katex-html","aria-hidden":"true",children:a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mopen",children:"("}),n(e.span,{className:"mord mathnormal",children:"c"}),n(e.span,{className:"mpunct",children:","}),n(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),n(e.span,{className:"mord mathnormal",children:"c"}),n(e.span,{className:"mclose",children:")"})]})})]})})," 에서 처음으로 멈추게 되겠다."]}),`
`]}),`
`]}),`
`,a(e.li,{children:["왼쪽 혹은 위쪽에 더 이상 같은 숫자가 없으면, ",n(e.code,{children:"좌상단"})," 방향, 즉 ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[a(e.mrow,{children:[n(e.mo,{stretchy:"false",children:"("}),n(e.mi,{children:"x"}),n(e.mo,{children:"−"}),n(e.mn,{children:"1"}),n(e.mo,{separator:"true",children:","}),n(e.mi,{children:"y"}),n(e.mo,{children:"−"}),n(e.mn,{children:"1"}),n(e.mo,{stretchy:"false",children:")"})]}),n(e.annotation,{encoding:"application/x-tex",children:"(x - 1, y - 1)"})]})})}),a(e.span,{className:"katex-html","aria-hidden":"true",children:[a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mopen",children:"("}),n(e.span,{className:"mord mathnormal",children:"x"}),n(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),n(e.span,{className:"mbin",children:"−"}),n(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"0.8389em",verticalAlign:"-0.1944em"}}),n(e.span,{className:"mord",children:"1"}),n(e.span,{className:"mpunct",children:","}),n(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),n(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),n(e.span,{className:"mbin",children:"−"}),n(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mord",children:"1"}),n(e.span,{className:"mclose",children:")"})]})]})]})})," 좌표에 있는 숫자가 ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[a(e.mrow,{children:[n(e.mo,{stretchy:"false",children:"("}),n(e.mi,{children:"x"}),n(e.mo,{separator:"true",children:","}),n(e.mi,{children:"y"}),n(e.mo,{stretchy:"false",children:")"})]}),n(e.annotation,{encoding:"application/x-tex",children:"(x, y)"})]})})}),n(e.span,{className:"katex-html","aria-hidden":"true",children:a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mopen",children:"("}),n(e.span,{className:"mord mathnormal",children:"x"}),n(e.span,{className:"mpunct",children:","}),n(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),n(e.span,{className:"mclose",children:")"})]})})]})})," 좌표의 숫자보다 ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[n(e.mrow,{children:n(e.mn,{children:"1"})}),n(e.annotation,{encoding:"application/x-tex",children:"1"})]})})}),n(e.span,{className:"katex-html","aria-hidden":"true",children:a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"0.6444em"}}),n(e.span,{className:"mord",children:"1"})]})})]})})," 작은 수가 된다. 그 위치에서의 문자열을 기록하고, 대각선 방향으로 이동한다."]}),`
`,a(e.li,{children:["이를 반복하여 최종적으로 숫자가 0이 될 때까지 저장된 문자열을 읽으면, 그것이 ",n(e.code,{children:"LCS"}),"가 된다."]}),`
`]}),`
`,a(e.p,{children:["2번이 조금 이해가 안될 수 있는데, 맨 처음 코드를 다시 올려보면, 문자열이 같을 때 ",n(e.span,{className:"math math-inline",children:a(e.span,{className:"katex",children:[n(e.span,{className:"katex-mathml",children:n(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:a(e.semantics,{children:[a(e.mrow,{children:[n(e.mo,{stretchy:"false",children:"("}),n(e.mi,{children:"x"}),n(e.mo,{children:"+"}),n(e.mn,{children:"1"}),n(e.mo,{separator:"true",children:","}),n(e.mi,{children:"y"}),n(e.mo,{children:"+"}),n(e.mn,{children:"1"}),n(e.mo,{stretchy:"false",children:")"})]}),n(e.annotation,{encoding:"application/x-tex",children:"(x+1, y+1)"})]})})}),a(e.span,{className:"katex-html","aria-hidden":"true",children:[a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mopen",children:"("}),n(e.span,{className:"mord mathnormal",children:"x"}),n(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),n(e.span,{className:"mbin",children:"+"}),n(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"0.8389em",verticalAlign:"-0.1944em"}}),n(e.span,{className:"mord",children:"1"}),n(e.span,{className:"mpunct",children:","}),n(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),n(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),n(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),n(e.span,{className:"mbin",children:"+"}),n(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),a(e.span,{className:"base",children:[n(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),n(e.span,{className:"mord",children:"1"}),n(e.span,{className:"mclose",children:")"})]})]})]})})," 방향으로 1만큼 더하면서 전진했다. 이를 역으로 한 것이라고 보면 된다."]}),`
`,n(e.h2,{id:"예시-구현-코드",children:"예시 구현 코드"}),`
`,a(e.ul,{children:[`
`,a(e.li,{children:["AtCoder Educational DP Contest F번: ",n(e.a,{href:"https://atcoder.jp/contests/dp/tasks/dp_f",children:"https://atcoder.jp/contests/dp/tasks/dp_f"})]}),`
`]}),`
`,n(e.p,{children:"두 문자열을 받아 가장 긴 LCS를 출력하는 문제이다."}),`
`,n(e.pre,{children:n(e.code,{className:"language-cpp",children:`char A[3010];
char B[3010];
char C[3010];
int DP[3010][3010];

void solve() {
    scanf("%s %s", &A[1], &B[1]);
    int lena = strlen(&A[1]);
    int lenb = strlen(&B[1]);

    for(int b = 1; b <= lenb; ++b) {
        for(int a = 1; a <= lena; ++a) {
            if (A[a] == B[b]) {
                DP[b][a] = DP[b - 1][a - 1] + 1;
            } else {
                DP[b][a] = max(DP[b - 1][a], DP[b][a - 1]);
            }
        }
    }

    // LCS 길이 = DP[lenb][lena]
    int ca = lena, cb = lenb;
    int cp = 0;
    while(DP[cb][ca] != 0) {
        if (DP[cb - 1][ca] == DP[cb][ca]) {
            --cb;
        } else if (DP[cb][ca - 1] == DP[cb][ca]) {
            --ca;
        } else if (DP[cb - 1][ca - 1] + 1 == DP[cb][ca]) {
            C[cp++] = B[cb];
            cb--; ca--;
        }
    }
    int clen = cp;
    for(int i = cp - 1; i >= 0; --i) { // 출력은 역순으로
        printf("%c", C[i]);
    }
    printf("\\n");
}
`})}),`
`,n(h,{}),`
`,n(m,{})]})}function o(l={}){const{wrapper:e}=Object.assign({},c(),l.components);return e?n(e,Object.assign({},l,{children:n(s,l)})):s(l)}const p=Object.freeze(Object.defineProperty({__proto__:null,default:o},Symbol.toStringTag,{value:"Module"})),i={};i.outlineInfo=r;i.main=p;export{i as default};
