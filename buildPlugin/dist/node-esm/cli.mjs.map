{"version":3,"file":"cli.mjs","sources":["../../src/node/constants.ts","../../src/node/static-site-generation/index.ts","../../src/node/cli.ts"],"sourcesContent":["import { resolve } from 'path'\nimport { fileURLToPath } from 'url'\n\nexport const PKG_ROOT = resolve(fileURLToPath(import.meta.url), '../../..')\nexport const CLIENT_PATH = resolve(PKG_ROOT, 'dist/client-bundles')\n","import { build as viteBuild } from 'vite'\nimport type { ResolvedConfig, Rollup } from 'vite'\nimport { minify } from 'html-minifier-terser'\nimport * as path from 'path'\nimport fs from 'fs-extra'\nimport { pathToFileURL } from 'node:url'\n\nimport { CLIENT_PATH } from '../constants'\nimport type { SSRPlugin } from '../../../clientTypes'\nimport type { staticSiteGenerationConfig } from '../types'\n\ntype RollupOutput = Rollup.RollupOutput\n\nconst minifyOptions = {\n  keepClosingSlash: true,\n  removeRedundantAttributes: true,\n  removeStyleLinkTypeAttributes: true,\n  useShortDoctype: true,\n  minifyCSS: true,\n}\n\nexport async function ssrBuild(\n  viteConfig: ResolvedConfig,\n  argv: any,\n  ssrConfig?: staticSiteGenerationConfig\n) {\n  // ssr build should not use hash router\n  // if (viteOptions?.define?.['__HASH_ROUTER__'])\n  //   viteOptions!.define!['__HASH_ROUTER__'] = false\n  const root = viteConfig.root\n  let outDir = viteConfig.build?.outDir ?? 'dist'\n  outDir = path.resolve(root, outDir)\n  await fs.emptyDir(outDir)\n\n  const ssrOutDir = path.join(outDir, 'ssr-tmp')\n  const clientOutDir = path.join(outDir, 'client-tmp')\n\n  console.log('\\n\\npreparing vite pages ssr bundle...')\n  const ssrOutput = await viteBuild({\n    root,\n    configFile: viteConfig.configFile,\n    // mode: \"development\",\n    build: {\n      ssr: true,\n      cssCodeSplit: false,\n      rollupOptions: {\n        input: path.join(CLIENT_PATH, 'entries', 'ssg-server.mjs'),\n        // preserveEntrySignatures: 'allow-extension',\n        output: {\n          entryFileNames: '[name].mjs',\n          chunkFileNames: '[name]-[hash].mjs',\n        },\n      },\n      outDir: ssrOutDir,\n      minify: false,\n    },\n    ssr: {\n      // `vite-pages-theme-doc/dist/index.js` have `import './index.css'`\n      // so it needs to be bundled by vite before executed by node.js.\n      // This is coupled to theme-doc,\n      // but we don't want to ask users to put this in their vite config.\n      // So let's put it here :)\n      noExternal: ['vite-pages-theme-doc'],\n    },\n  })\n\n  console.log('\\n\\nrendering html...')\n\n  const ssrPluginPromises: Promise<SSRPlugin>[] = []\n  ;(global as any)['register_vite_pages_ssr_plugin'] = (\n    importSSRPlugin: () => Promise<SSRPlugin>\n  ) => {\n    ssrPluginPromises.push(importSSRPlugin())\n  }\n  process.env.VITE_PAGES_IS_SSR = 'true'\n\n  const { renderToString, ssrData } = await import(\n    pathToFileURL(path.join(ssrOutDir, 'ssg-server.mjs')).toString()\n  )\n\n  const ssrPlugins = await Promise.all(ssrPluginPromises)\n  ssrPlugins.forEach((plugin, index) => {\n    // validate ssr plugins\n    if (!plugin?.id) {\n      console.error('invalid ssr plugins:', ssrPlugins)\n      throw new Error('invalid ssr plugin: no plugin id')\n    }\n    const idx = ssrPlugins.findIndex((p) => p.id === plugin.id)\n    if (idx !== index) {\n      console.error('invalid ssr plugins:', ssrPlugins)\n      throw new Error(`duplicate ssr plugin: ${plugin.id}`)\n    }\n  })\n\n  const pagePaths = Object.keys(ssrData)\n\n  console.log('\\n\\npreparing vite pages client bundle...')\n  const _clientResult = await viteBuild({\n    root,\n    configFile: viteConfig.configFile,\n    build: {\n      cssCodeSplit: false,\n      rollupOptions: {\n        input: path.join(CLIENT_PATH, 'entries', 'ssg-client.mjs'),\n        preserveEntrySignatures: 'allow-extension',\n      },\n      assetsDir: 'assets',\n      outDir: clientOutDir,\n    },\n  })\n  let clientResult: RollupOutput\n  if (Array.isArray(_clientResult)) {\n    if (_clientResult.length !== 1)\n      throw new Error(`expect viteBuild to have only one BuildResult`)\n    clientResult = _clientResult[0]\n  } else {\n    clientResult = _clientResult as RollupOutput\n  }\n\n  const entryChunk = (() => {\n    const _entryChunks = clientResult.output.filter((chunkOrAsset) => {\n      return chunkOrAsset.type === 'chunk' && chunkOrAsset.isEntry\n    })\n    if (_entryChunks.length !== 1) {\n      throw new Error(`Expect one entryChunk. Got ${_entryChunks.length}.`)\n    }\n    return _entryChunks[0]\n  })()\n\n  const cssChunks = clientResult.output.filter((chunk) => {\n    return chunk.type === 'asset' && chunk.fileName.endsWith('.css')\n  })\n\n  const basePath = viteConfig.base ?? '/'\n\n  const htmlCode = await fs.readFile(path.join(root, 'index.html'), 'utf-8')\n  const RootElementInjectPoint = '<div id=\"root\"></div>'\n  if (!htmlCode.includes(RootElementInjectPoint)) {\n    throw new Error(\n      `Your index.html should contain the RootElementInjectPoint: \"${RootElementInjectPoint}\" (it must appear exactly as-is)`\n    )\n  }\n  const EntryModuleInjectPoint =\n    '<script type=\"module\" src=\"/@pages-infra/main.js\"></script>'\n  if (!htmlCode.includes(EntryModuleInjectPoint)) {\n    throw new Error(\n      `Your index.html should contain EntryModuleInjectPoint: \"${EntryModuleInjectPoint}\" (it must appear exactly as-is)`\n    )\n  }\n  const CSSInjectPoint = '</head>'\n  if (!htmlCode.includes(CSSInjectPoint)) {\n    throw new Error(\n      `Your index.html should contain CSSInjectPoint: \"${CSSInjectPoint}\" (it must appear exactly as-is)`\n    )\n  }\n\n  await Promise.all(\n    pagePaths.map(async (pagePath) => {\n      // currently not support pages with path params\n      // .e.g /users/:userId\n      if (pagePath.match(/\\/:\\w/)) return\n      const html = await renderHTML(pagePath)\n      // TODO: injectPreload\n      // preload data module for this page\n      // html = injectPreload(html, \"path/to/page/data\")\n      const writePath = path.join(\n        clientOutDir,\n        pagePath.replace(/^\\//, ''),\n        'index.html'\n      )\n      await fs.ensureDir(path.dirname(writePath))\n      await fs.writeFile(writePath, html)\n      if (pagePath !== '/') {\n        // should write to both /pagePath/index.html and /pagePath.html\n        const writePath2 = path.join(\n          clientOutDir,\n          pagePath.replace(/^\\//, '') + '.html'\n        )\n        await fs.ensureDir(path.dirname(writePath2))\n        await fs.writeFile(writePath2, html)\n      }\n    })\n  )\n\n  const html404Path = path.join(clientOutDir, '404.html')\n  // pass in a pagePath that won't match any defined page\n  // so the render result will be 404 page\n  const html404 = await renderHTML('/internal-404-page')\n  await fs.writeFile(html404Path, html404)\n  // move 404 page to `/` if `/` doesn't exists\n  if (!pagePaths.includes('/')) {\n    await fs.copy(html404Path, path.join(clientOutDir, 'index.html'))\n  }\n\n  await fs.copy(clientOutDir, outDir)\n  await fs.remove(clientOutDir)\n  await fs.remove(ssrOutDir)\n  console.log('vite pages ssr build finished successfully.')\n  return\n\n  async function renderHTML(pagePath: string) {\n    const { contentText, styleText } = renderToString(pagePath, ssrPlugins)\n    const ssrInfo = {\n      routePath: pagePath,\n    }\n    let html = htmlCode.replace(\n      RootElementInjectPoint,\n      // let client know the current ssr page\n      `<script>window._vitePagesSSR=${JSON.stringify(ssrInfo)};</script>\n<div id=\"root\">${contentText}</div>`\n    )\n    const cssInject = cssChunks.map((cssChunk) => {\n      return `<link rel=\"stylesheet\" href=\"${basePath}${cssChunk.fileName}\" />`\n    })\n    cssInject.push(styleText)\n\n    html = html.replace(\n      CSSInjectPoint,\n      `${cssInject.join('\\n')}\n${CSSInjectPoint}`\n    )\n    html = html.replace(\n      EntryModuleInjectPoint,\n      `<script type=\"module\" src=\"${basePath}${entryChunk.fileName}\"></script>`\n    )\n\n    const minifyHtml = argv?.minifyHtml ?? ssrConfig?.minifyHtml ?? true\n    if (minifyHtml) {\n      const minifiedHtml = await minify(html, minifyOptions)\n      return minifiedHtml\n    }\n\n    return html\n  }\n}\n\nconst injectPreload = (html: string, filePath: string) => {\n  const tag = `<link rel=\"modulepreload\" href=\"${filePath}\" />`\n  if (/<\\/head>/.test(html)) {\n    return html.replace(/<\\/head>/, `${tag}\\n</head>`)\n  } else {\n    return tag + '\\n' + html\n  }\n}\n","import chalk from 'chalk'\nimport fs from 'fs-extra'\nimport minimist from 'minimist'\nimport path from 'node:path'\nimport { resolveConfig } from 'vite'\nimport type { InlineConfig } from 'vite'\nimport { PKG_ROOT } from './constants'\nimport { ssrBuild } from './static-site-generation'\nimport type { staticSiteGenerationConfig } from './types'\n\nconst argv: any = minimist(process.argv.slice(2))\n\nconsole.log(\n  chalk.cyan(\n    `vite-pages v${\n      fs.readJSONSync(path.resolve(PKG_ROOT, 'package.json')).version\n    }`\n  )\n)\n// console.log(chalk.cyan(`vite v${require('vite/package.json').version}`))\n\n// cli usage: vite-pages ssr [root] [--minifyHtml] [vite options like: --configFile, --base, --logLevel, --mode, --build.outDir, etc.]\nconst [command, root] = argv._\nif (root) {\n  argv.root = root\n}\n\n// make `--minifyHtml=false` to be treated as boolean false instead of string \"false\"\nObject.entries(argv).forEach(([key, value]) => {\n  if (value === 'false') argv[key] = false\n})\n\n// console.log('@@argv', argv)\n;(async () => {\n  if (!command || command === 'ssr') {\n    const toBeResovledConfig: InlineConfig = {\n      ...argv,\n    }\n\n    // user can pass in vite config like --outDir or --configFile\n    const viteConfig = await resolveConfig(\n      toBeResovledConfig,\n      'build',\n      'production',\n      'production'\n    )\n    const thisPlugin = viteConfig.plugins.find((plugin) => {\n      return plugin.name === 'vite-plugin-react-pages'\n    })\n    //@ts-expect-error\n    const ssrConfig = thisPlugin?.vitePagesStaticSiteGeneration as\n      | staticSiteGenerationConfig\n      | undefined\n\n    await ssrBuild(viteConfig, argv, ssrConfig).catch((err: any) => {\n      console.error(chalk.red(`ssr error:\\n`), err)\n      process.exit(1)\n    })\n  } else {\n    console.error(\n      `[vite-pages] Invalid command. CLI usage: vite-pages ssr [root] [--minifyHtml] [vite options like: --configFile, --base, --logLevel, --mode, --build.outDir, etc.]`\n    )\n  }\n})()\n"],"names":["PKG_ROOT","resolve","fileURLToPath","import","meta","url","CLIENT_PATH","minifyOptions","keepClosingSlash","removeRedundantAttributes","removeStyleLinkTypeAttributes","useShortDoctype","minifyCSS","ssrBuild","viteConfig","argv","ssrConfig","root","outDir","build","path","fs","emptyDir","ssrOutDir","join","clientOutDir","console","log","viteBuild","configFile","ssr","cssCodeSplit","rollupOptions","input","output","entryFileNames","chunkFileNames","minify","noExternal","ssrPluginPromises","global","importSSRPlugin","push","process","env","VITE_PAGES_IS_SSR","renderToString","ssrData","pathToFileURL","toString","ssrPlugins","Promise","all","forEach","plugin","index","id","error","Error","idx","findIndex","p","pagePaths","Object","keys","_clientResult","preserveEntrySignatures","assetsDir","clientResult","Array","isArray","length","entryChunk","_entryChunks","filter","chunkOrAsset","type","isEntry","cssChunks","chunk","fileName","endsWith","basePath","base","htmlCode","readFile","RootElementInjectPoint","includes","EntryModuleInjectPoint","CSSInjectPoint","map","pagePath","match","html","renderHTML","writePath","replace","ensureDir","dirname","writeFile","writePath2","html404Path","html404","copy","remove","contentText","styleText","ssrInfo","routePath","JSON","stringify","cssInject","cssChunk","minifyHtml","minifiedHtml","minimist","slice","chalk","cyan","readJSONSync","version","command","_","entries","key","value","toBeResovledConfig","resolveConfig","thisPlugin","plugins","find","name","vitePagesStaticSiteGeneration","catch","err","red","exit"],"mappings":"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"}