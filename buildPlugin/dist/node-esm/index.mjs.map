{"version":3,"file":"index.mjs","sources":["../../src/node/utils/virtual-module/utils/extractStaticData.ts","../../src/node/utils/virtual-module/utils/PendingTaskCounter.ts","../../src/node/utils/virtual-module/utils/File.ts","../../src/node/utils/virtual-module/VirtualModules.ts","../../src/node/utils/virtual-module/VirtualModulesManager.ts","../../src/node/utils/virtual-module/ProxyModulesManager.ts","../../src/node/page-strategy/UpdateBuffer.ts","../../src/node/page-strategy/PagesDataKeeper.ts","../../src/node/page-strategy/index.ts","../../src/node/page-strategy/DefaultPageStrategy/index.ts","../../src/node/page-strategy/pageUtils.ts","../../src/node/virtual-module-plugins/theme.ts","../../src/node/utils/mdastUtils.ts","../../src/node/virtual-module-plugins/demo-modules/mdx-plugin.ts","../../src/node/virtual-module-plugins/demo-modules/index.tsx","../../src/node/virtual-module-plugins/ts-info-module/extract.ts","../../src/node/virtual-module-plugins/ts-info-module/mdx-plugin.ts","../../src/node/virtual-module-plugins/ts-info-module/index.ts","../../src/node/utils/injectHTMLTag.ts","../../src/node/utils/mdx-plugin-file-text.ts","../../src/node/virtual-module-plugins/outline-info-module/extractOutlineInfo.ts","../../src/node/virtual-module-plugins/outline-info-module/index.tsx","../../src/node/index.ts"],"sourcesContent":["import { extract, parse } from 'jest-docblock'\r\nimport grayMatter from 'gray-matter'\r\nimport { File } from './File'\r\n\r\nexport async function extractStaticData(\r\n  file: File\r\n): Promise<{ sourceType: string; [key: string]: any }> {\r\n  const code = await file.read()\r\n  switch (file.extname) {\r\n    case 'md':\r\n    case 'mdx':\r\n      const { data: frontmatter } = grayMatter(code)\r\n      const staticData: any = {\r\n        ...frontmatter,\r\n        sourceType: 'md',\r\n        __sourceFilePath: file.path,\r\n      }\r\n      if (staticData.title === undefined) {\r\n        staticData.title = extractMarkdownTitle(code)\r\n      }\r\n      return staticData\r\n    case 'js':\r\n    case 'jsx':\r\n    case 'ts':\r\n    case 'tsx':\r\n      return { ...parse(extract(code)), sourceType: 'js' }\r\n    default:\r\n      throw new Error(`unexpected extension name \"${file.extname}\"`)\r\n  }\r\n}\r\nfunction extractMarkdownTitle(code: string) {\r\n  const match = code.match(/^# (.*)$/m)\r\n  return match?.[1]\r\n}\r\n","export class PendingTaskCounter {\r\n  private count = 0\r\n  private callbacks: (() => void)[] = []\r\n\r\n  public countTask() {\r\n    this.count++\r\n    let ended = false\r\n    return () => {\r\n      if (ended) return\r\n      ended = true\r\n      this.count--\r\n      if (this.count === 0) {\r\n        this.callbacks.forEach((cb) => cb())\r\n        this.callbacks.length = 0\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the callback style is preferred over the promise style\r\n   * because cb will be called **synchronously** when count turn 0\r\n   * while promise-then-cb would be called in next microtask (at that time the state may have changed)\r\n   */\r\n  public callOnceWhenIdle(cb: () => void) {\r\n    if (this.count === 0) {\r\n      cb()\r\n    } else {\r\n      this.callbacks.push(cb)\r\n    }\r\n  }\r\n\r\n  /** track a changeable pending state */\r\n  public countPendingState(pendingState: PendingState) {\r\n    let stopCounting: undefined | (() => void)\r\n    pendingState.onStateChange((isPending) => {\r\n      if (isPending) {\r\n        // if this task has already been counted, don't count again\r\n        if (stopCounting) return\r\n        stopCounting = this.countTask()\r\n      } else {\r\n        stopCounting?.()\r\n        stopCounting = undefined\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport class PendingState {\r\n  private _isPending = false\r\n  get isPending() {\r\n    return this._isPending\r\n  }\r\n  set isPending(value: boolean) {\r\n    if (this._isPending === value) return\r\n    this._isPending = value\r\n    this.cbs.forEach((cb) => cb(value))\r\n  }\r\n\r\n  private cbs: Array<(isPending: boolean) => void> = []\r\n  onStateChange(cb: (isPending: boolean) => void) {\r\n    this.cbs.push(cb)\r\n    return () => {\r\n      this.cbs = this.cbs.filter((v) => v !== cb)\r\n    }\r\n  }\r\n}\r\n","import fs from 'fs-extra'\r\nimport * as path from 'path'\r\n\r\nexport class File {\r\n  content: Promise<string> | null = null\r\n\r\n  constructor(readonly path: string, readonly base: string) {}\r\n\r\n  get relative() {\r\n    return path.posix.relative(this.base, this.path)\r\n  }\r\n\r\n  get extname() {\r\n    return path.posix.extname(this.path).slice(1)\r\n  }\r\n\r\n  read() {\r\n    return this.content || (this.content = fs.readFile(this.path, 'utf-8'))\r\n  }\r\n}\r\n","import { PendingState } from './utils'\r\n\r\nexport class VirtualModuleGraph {\r\n  /**\r\n   * the module inside this graph may be virtual module or real fs module\r\n   */\r\n  private readonly modules: Map<string, Module> = new Map()\r\n\r\n  /**\r\n   * Serialize the update works (instead of doing them concurrently)\r\n   * to make the result more predictable.\r\n   *\r\n   * If there is already a queuing update with same updaterId,\r\n   * it won't schedule a new one.\r\n   *\r\n   * Before executing an updater, it will automatically cleanup the effects of\r\n   * previous update with same updaterId.\r\n   * Example:\r\n   * When find module1 for the first time:\r\n   *   the updater set data for module2 and module3 (upstreamModule is module1)\r\n   * Then, when observe that module1 is updated:\r\n   *   the updater set data for module2 (upstreamModule is module1)\r\n   * At this time, the data in module3 should be automatically cleanup!\r\n   * So the updater(users) don't need to manually delete the old data in module3.\r\n   */\r\n  private updateQueue = new UpdateQueue()\r\n  /** track updateQueue empty state (isPending means not empty) */\r\n  public updateQueueEmptyState = new PendingState()\r\n\r\n  public getModuleIds(filter?: (moduleId: string) => boolean): string[] {\r\n    const ids = Array.from(this.modules.keys())\r\n    if (filter) return ids.filter(filter)\r\n    return ids\r\n  }\r\n\r\n  public getModuleData(moduleId: string): any[] {\r\n    const module = this.modules.get(moduleId)\r\n    if (!module) return []\r\n    return module.getData()\r\n  }\r\n\r\n  public getModules(filter?: (moduleId: string) => boolean) {\r\n    let entries = Array.from(this.modules.entries())\r\n    // filter is a performance optimization:\r\n    // don't call module.getData() for filtered-out modules\r\n    if (filter) entries = entries.filter(([moduleId]) => filter(moduleId))\r\n    const modules: { [id: string]: any[] } = {}\r\n    entries.forEach(([moduleId, module]) => {\r\n      modules[moduleId] = module.getData()\r\n    })\r\n    return modules\r\n  }\r\n\r\n  /**\r\n   * This is the only way to update virtual modules\r\n   */\r\n  public scheduleUpdate(updaterId: string, updater: Update['updater']) {\r\n    this.updateQueue.push(updaterId, updater)\r\n    this.updateQueueEmptyState.isPending = true\r\n    // don't schedule setTimeout if there is already one\r\n    if (this.updateQueue.size === 1) {\r\n      setTimeout(() => {\r\n        this.executeUpdates()\r\n      }, 0)\r\n    }\r\n  }\r\n\r\n  public addModuleListener(\r\n    handler: ModuleListener,\r\n    filter?: (moduleId: string) => boolean\r\n  ) {\r\n    return this._addModuleListener((moduleId, data, prevData) => {\r\n      if (filter && !filter(moduleId)) return\r\n      handler(moduleId, data, prevData)\r\n    })\r\n  }\r\n  /**\r\n   * listen to virtual module updates.\r\n   * users can scheduleUpdate in these listeners, creating dependency chain of\r\n   * virtual modules.\r\n   * (.i.e when a virtual module changes, it will update another virtual module)\r\n   *\r\n   * users will retrieve new module data and previous module data,\r\n   * so users can diff them to decide whether the module has \"really\" changed.\r\n   * if users think they are the same, they can skip updating other virtual modules.\r\n   * VirtualModuleGraph works on a very low level. It don't know what module data means. So it send updates event to users very often and let users to interpret module data (and whether the data has \"really\" changed).\r\n   *\r\n   * @return unsubscribe function\r\n   */\r\n  private _addModuleListener(cb: ModuleListener) {\r\n    this.moduleUpdateListeners.push(cb)\r\n    return () => {\r\n      const index = this.moduleUpdateListeners.indexOf(cb)\r\n      if (index === -1) return\r\n      this.moduleUpdateListeners.splice(index, 1)\r\n    }\r\n  }\r\n  private moduleUpdateListeners: ModuleListener[] = []\r\n  private callModuleUpdateListeners(\r\n    updatedModules: Map<Module, { prevData: any[] }>\r\n  ) {\r\n    updatedModules.forEach(({ prevData }, module) => {\r\n      const data = module.getData()\r\n      this.moduleUpdateListeners.forEach((moduleUpdateListener) => {\r\n        moduleUpdateListener(module.id, data, prevData)\r\n      })\r\n    })\r\n  }\r\n\r\n  // executeUpdates_Inner is not reentrant\r\n  // use a state(lock) to prevent concurrent execution\r\n  public updateExecutingState = new PendingState()\r\n  private async executeUpdates() {\r\n    if (this.updateExecutingState.isPending) return\r\n    this.updateExecutingState.isPending = true\r\n    try {\r\n      await this.executeUpdates_Inner()\r\n    } finally {\r\n      this.updateExecutingState.isPending = false\r\n      if (this.updateQueue.size === 0)\r\n        this.updateQueueEmptyState.isPending = false\r\n    }\r\n  }\r\n  private async executeUpdates_Inner(depth = 1) {\r\n    if (this.updateQueue.size === 0) return\r\n    if (depth > MAX_CASCADE_UPDATE_DEPTH)\r\n      throw new Error(\r\n        `Cascaded updates exceed max depth ${MAX_CASCADE_UPDATE_DEPTH}. Probably because the depth of the virtual module tree is too high, or there is a cycle in the virtual module graph.`\r\n      )\r\n\r\n    // record the updatedModules so that we can notify listeners in the end\r\n    // also store prevData so users can diff it with new data\r\n    const updatedModules = new Map<Module, { prevData: any[] }>()\r\n    /** it must be called before updating data so that it can record prevData */\r\n    const recordAffectedModule = (module: Module) => {\r\n      if (updatedModules.has(module)) return\r\n      updatedModules.set(module, { prevData: module.getData() })\r\n    }\r\n\r\n    while (true) {\r\n      const update = this.updateQueue.pop()\r\n      if (!update) break\r\n      // cleanup the effects of previous update with same updaterId\r\n      cleanupEdgesWithUpdaterId(update.updaterId, recordAffectedModule)\r\n      const { disableAPIs, ...apis } = this.createUpdateAPIs(\r\n        update.updaterId,\r\n        recordAffectedModule\r\n      )\r\n      await update.updater(apis)\r\n      disableAPIs()\r\n    }\r\n    this.callModuleUpdateListeners(updatedModules)\r\n    // if the listeners schedule more updates,\r\n    // execute them synchronously and recursively\r\n    await this.executeUpdates_Inner(depth + 1)\r\n  }\r\n\r\n  private createUpdateAPIs(\r\n    updaterId: string,\r\n    recordAffectedModule: (module: Module) => void\r\n  ): VirtualModuleAPIs & { disableAPIs(): void } {\r\n    let outdated = false\r\n    const _this = this\r\n    const OUTDATED_ERROR_MSG = `You should not call update APIs after the updater async function.`\r\n    return {\r\n      addModuleData(moduleId: string, data: any, upstreamModuleId: string) {\r\n        if (outdated) throw new Error(OUTDATED_ERROR_MSG)\r\n        if (moduleId === upstreamModuleId)\r\n          throw new Error(\r\n            `addModuleData param error: source and target modules are the same`\r\n          )\r\n        // upstreamModuleId may be real file in fs\r\n        const fromModule = _this.ensureModule(upstreamModuleId)\r\n        const toModule = _this.ensureModule(moduleId)\r\n        recordAffectedModule(toModule)\r\n        Edge.addEdge(fromModule, toModule, data, updaterId)\r\n      },\r\n      getModuleData(moduleId: string) {\r\n        if (outdated) throw new Error(OUTDATED_ERROR_MSG)\r\n        return _this.getModuleData(moduleId)\r\n      },\r\n      deleteModule(moduleId: string) {\r\n        if (outdated) throw new Error(OUTDATED_ERROR_MSG)\r\n        const module = _this.modules.get(moduleId)\r\n        if (!module) return\r\n        module.delete(recordAffectedModule)\r\n        _this.modules.delete(moduleId)\r\n      },\r\n      disableAPIs() {\r\n        outdated = true\r\n      },\r\n    }\r\n  }\r\n\r\n  private ensureModule(moduleId: string): Module {\r\n    let result = this.modules.get(moduleId)\r\n    if (!result) {\r\n      result = new Module(moduleId)\r\n      this.modules.set(moduleId, result)\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nexport type ModuleListener = (\r\n  moduleId: string,\r\n  data: any[],\r\n  prevData: any[]\r\n) => void\r\n\r\n/**\r\n * Modules are nodes in the graph\r\n */\r\nclass Module {\r\n  constructor(public id: string) {}\r\n\r\n  public getData() {\r\n    return Array.from(this.data).map(({ data }) => data)\r\n  }\r\n\r\n  /** unlink this module */\r\n  public delete(recordAffectedModule: (module: Module) => void) {\r\n    if (this.data.size > 0) {\r\n      // there are upstream modules that are \"piping\" data to this module\r\n      throw new Error(\r\n        `This module has upstream modules. You should delete modules in topological order. moduleID: ${this.id}`\r\n      )\r\n    }\r\n    recordAffectedModule(this)\r\n    this.downstream.forEach((edge) => {\r\n      recordAffectedModule(edge.to)\r\n      edge.unlink()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * incoming edges of the node\r\n   * indicating the data of this virtual module\r\n   *\r\n   * real fs module won't need this\r\n   */\r\n  private data: Set<Edge> = new Set()\r\n\r\n  /**\r\n   * outcoming edges of the node\r\n   * indicating which modules depend on this module\r\n   *\r\n   * it is needed because we need to update downstream modules\r\n   * when a fs module is deleted\r\n   */\r\n  private downstream: Set<Edge> = new Set()\r\n}\r\ninterface ModuleInternal {\r\n  data: Set<Edge>\r\n  downstream: Set<Edge>\r\n}\r\n\r\nclass Edge {\r\n  static addEdge(from: Module, to: Module, data: any, updaterId: string) {\r\n    const edge = new Edge(from, to, data, updaterId)\r\n    // set private fields of modules\r\n    ;(from as unknown as ModuleInternal).downstream.add(edge)\r\n    ;(to as unknown as ModuleInternal).data.add(edge)\r\n    bindEdgeWithUpdaterId(edge)\r\n  }\r\n\r\n  private constructor(\r\n    public from: Module,\r\n    public to: Module,\r\n    public data: any,\r\n    public updaterId: string\r\n  ) {}\r\n\r\n  private hasUnlinked = false\r\n  public unlink() {\r\n    if (this.hasUnlinked) {\r\n      return\r\n    }\r\n    // set private fields of modules\r\n    ;(this.from as unknown as ModuleInternal).downstream.delete(this)\r\n    ;(this.to as unknown as ModuleInternal).data.delete(this)\r\n    unbindEdgeWithUpdaterId(this)\r\n    this.hasUnlinked = true\r\n  }\r\n}\r\n\r\nconst mapUpdaterIdToEdges = new Map<string, Set<Edge>>()\r\nfunction bindEdgeWithUpdaterId(edge: Edge) {\r\n  const { updaterId } = edge\r\n  let edges = mapUpdaterIdToEdges.get(updaterId)\r\n  if (!edges) {\r\n    edges = new Set()\r\n    mapUpdaterIdToEdges.set(updaterId, edges)\r\n  }\r\n  edges.add(edge)\r\n}\r\nfunction unbindEdgeWithUpdaterId(edge: Edge) {\r\n  const { updaterId } = edge\r\n  const edges = mapUpdaterIdToEdges.get(updaterId)\r\n  if (!edges || !edges.has(edge))\r\n    throw new Error(`assertion fail: unlinkEdgeWithUpdaterId`)\r\n  edges.delete(edge)\r\n}\r\nfunction cleanupEdgesWithUpdaterId(\r\n  updaterId: string,\r\n  recordAffectedModule: (module: Module) => void\r\n) {\r\n  const edges = mapUpdaterIdToEdges.get(updaterId)\r\n  if (!edges) return\r\n  edges.forEach((edge) => {\r\n    recordAffectedModule(edge.to)\r\n    edge.unlink()\r\n  })\r\n  if (edges.size > 0)\r\n    throw new Error(\r\n      `assertion fail: all edges with updaterId should already be unlinked`\r\n    )\r\n  edges.clear()\r\n}\r\n\r\nexport interface VirtualModuleAPIs {\r\n  addModuleData(moduleId: string, data: any, upstreamModuleId: string): void\r\n  getModuleData(moduleId: string): any[]\r\n  deleteModule(moduleId: string): void\r\n}\r\n\r\nclass Update {\r\n  constructor(\r\n    public updaterId: string,\r\n    public updater: (apis: VirtualModuleAPIs) => void | Promise<void>\r\n  ) {}\r\n}\r\n\r\nclass UpdateQueue {\r\n  private queue: Update[] = []\r\n  private map = new Map<string, Update>()\r\n  get size() {\r\n    return this.queue.length\r\n  }\r\n  push(updaterId: string, updater: Update['updater']) {\r\n    // ignore it if the updaterId already exists in the queue\r\n    if (this.map.has(updaterId)) return\r\n    const update = new Update(updaterId, updater)\r\n    this.queue.push(update)\r\n    this.map.set(updaterId, update)\r\n  }\r\n  pop() {\r\n    const update = this.queue.shift()\r\n    if (!update) return null\r\n    const { updaterId } = update\r\n    this.map.delete(updaterId)\r\n    return update\r\n  }\r\n}\r\n\r\n// it indicates the depth of virtual modules\r\nconst MAX_CASCADE_UPDATE_DEPTH = 10\r\n","import * as path from 'path'\r\nimport chokidar, { FSWatcher } from 'chokidar'\r\nimport slash from 'slash'\r\n\r\nimport {\r\n  ModuleListener,\r\n  VirtualModuleAPIs,\r\n  VirtualModuleGraph,\r\n} from './VirtualModules'\r\nimport { PendingTaskCounter } from './utils'\r\nimport { File } from './utils'\r\n\r\nlet nextWatcherId = 0\r\n\r\n/**\r\n * watch fs and update corresponding virtual module when a file changed\r\n */\r\nexport class VirtualModulesManager {\r\n  private watchers = new Set<FSWatcher>()\r\n  private virtualModules = new VirtualModuleGraph()\r\n  private fileCache: { [path: string]: File } = {}\r\n  /**\r\n   * don't return half-finished data when there are pending tasks\r\n   */\r\n  private pendingTaskCounter = new PendingTaskCounter()\r\n\r\n  constructor() {\r\n    this.pendingTaskCounter.countPendingState(\r\n      this.virtualModules.updateExecutingState\r\n    )\r\n    this.pendingTaskCounter.countPendingState(\r\n      this.virtualModules.updateQueueEmptyState\r\n    )\r\n  }\r\n\r\n  public addFSWatcher(\r\n    baseDir: string,\r\n    globs: string[],\r\n    fileHandler: FileHandler\r\n  ) {\r\n    const watcherId = String(nextWatcherId++)\r\n\r\n    // should wait for a complete fs scan\r\n    // before returning the page data\r\n    const fsScanFinish = this.pendingTaskCounter.countTask()\r\n\r\n    this.watchers.add(\r\n      chokidar\r\n        .watch(globs, {\r\n          cwd: baseDir,\r\n          ignored: ['**/node_modules/**/*', '**/.git/**'],\r\n        })\r\n        .on('add', this.handleFileChange(baseDir, fileHandler, watcherId))\r\n        .on('change', this.handleFileChange(baseDir, fileHandler, watcherId))\r\n        .on('unlink', this.handleFileUnLink(baseDir, watcherId))\r\n        .on('ready', () => {\r\n          setTimeout(() => {\r\n            // ready event may be fired too early,\r\n            // before initial scan callbacks are called\r\n            // https://github.com/paulmillr/chokidar/issues/1011\r\n            fsScanFinish()\r\n          }, 10)\r\n        })\r\n    )\r\n  }\r\n\r\n  public getModules(\r\n    cb: (modules: { [id: string]: any[] }) => void,\r\n    filter?: (moduleId: string) => boolean\r\n  ) {\r\n    this.callOnceWhenIdle(() => {\r\n      cb(this.virtualModules.getModules(filter))\r\n    })\r\n  }\r\n\r\n  public getModule(moduleId: string, cb: (moduleData: any[]) => void) {\r\n    this.callOnceWhenIdle(() => {\r\n      cb(this.virtualModules.getModuleData(moduleId))\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Idle means:\r\n   * fs watcher is ready\r\n   * no update is executing\r\n   * update queue is empty\r\n   */\r\n  public callOnceWhenIdle(cb: () => void) {\r\n    this.pendingTaskCounter.callOnceWhenIdle(cb)\r\n  }\r\n\r\n  /**\r\n   * return the current state of modules.\r\n   * it doesn't wait for update task to finish\r\n   * so it may see intermediate state.\r\n   * use it carefully.\r\n   */\r\n  public _getModulesNow(filter?: (moduleId: string) => boolean) {\r\n    return this.virtualModules.getModules(filter)\r\n  }\r\n  /**\r\n   * return the current state of module.\r\n   * it doesn't wait for update task to finish\r\n   * so it may see intermediate state.\r\n   * use it carefully.\r\n   */\r\n  public _getModuleDataNow(moduleId: string) {\r\n    return this.virtualModules.getModuleData(moduleId)\r\n  }\r\n\r\n  public addModuleListener(\r\n    handler: ModuleListener,\r\n    filter?: (moduleId: string) => boolean\r\n  ) {\r\n    return this.virtualModules.addModuleListener(handler, filter)\r\n  }\r\n\r\n  public close() {\r\n    this.watchers.forEach((w) => w.close())\r\n  }\r\n\r\n  public scheduleUpdate(\r\n    updaterId: string,\r\n    updater: (apis: VirtualModuleAPIs) => void | Promise<void>\r\n  ): void {\r\n    return this.virtualModules.scheduleUpdate(updaterId, updater)\r\n  }\r\n\r\n  private handleFileChange(\r\n    baseDir: string,\r\n    fileHandler: FileHandler,\r\n    watcherId: string\r\n  ) {\r\n    return (filePath: string) => {\r\n      filePath = slash(path.join(baseDir, filePath))\r\n\r\n      const file =\r\n        this.fileCache[filePath] ||\r\n        (this.fileCache[filePath] = new File(filePath, baseDir))\r\n      // update content cache\r\n      file.content = null\r\n      file.read()\r\n\r\n      this.virtualModules.scheduleUpdate(\r\n        `${watcherId}-${filePath}`,\r\n        async (apis) => {\r\n          const handlerAPI: FileHandlerAPIs = {\r\n            addModuleData(moduleId: string, data: any) {\r\n              apis.addModuleData(moduleId, data, filePath)\r\n            },\r\n            getModuleData: apis.getModuleData,\r\n          }\r\n          await fileHandler(file, handlerAPI)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  private handleFileUnLink(baseDir: string, watcherId: string) {\r\n    return (filePath: string) => {\r\n      filePath = slash(path.join(baseDir, filePath))\r\n\r\n      this.virtualModules.scheduleUpdate(\r\n        `${watcherId}-${filePath}-unlink`,\r\n        async (apis) => {\r\n          // delete the node that represent this fs file in the virtual modules graph\r\n          // also delete all outcome edges\r\n          apis.deleteModule(filePath)\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\ntype FileHandler = (file: File, api: FileHandlerAPIs) => void | Promise<void>\r\n\r\nexport interface FileHandlerAPIs {\r\n  addModuleData(moduleId: string, data: any): void\r\n  getModuleData(moduleId: string): any[]\r\n}\r\n","import { File, VirtualModulesManager } from '.'\r\n\r\n/**\r\n * built upon VirtualModulesManager.\r\n * map each sourceFile into a proxyModule, which is a virtual module.\r\n * when the sourceFile is updated, it will emit update event for the proxyModule.\r\n */\r\nexport class ProxyModulesManager {\r\n  private vmm = new VirtualModulesManager()\r\n  private register: { [proxyModuleId: string]: boolean } = {}\r\n\r\n  constructor(public readonly proxyModulePrefix: string) {\r\n    if (!proxyModulePrefix)\r\n      throw new Error(`invalid proxyModulePrefix: ${proxyModulePrefix}`)\r\n  }\r\n\r\n  /**\r\n   * register a source file to watch,\r\n   * map its data into a proxy module,\r\n   * return the proxyModuleId\r\n   *\r\n   * to create multiple proxy modules for one sourceFilePath,\r\n   * you can pass in keys to differentiate between them.\r\n   */\r\n  registerProxyModule(\r\n    sourceFilePath: string,\r\n    getProxyModuleData: (sourceFile: File) => any,\r\n    key?: string\r\n  ) {\r\n    const proxyModuleId = this.getProxyModuleId(sourceFilePath, key)\r\n    if (this.register[proxyModuleId]) return proxyModuleId\r\n    this.vmm.addFSWatcher('', [sourceFilePath], async (file, api) => {\r\n      const proxyModuleData = await getProxyModuleData(file)\r\n      api.addModuleData(proxyModuleId, proxyModuleData)\r\n    })\r\n    this.register[proxyModuleId] = true\r\n    return proxyModuleId\r\n  }\r\n\r\n  /**\r\n   * get proxy module data by proxyModuleId\r\n   */\r\n  async getProxyModuleData(proxyModuleId: string) {\r\n    return new Promise<any>((res, rej) => {\r\n      this.vmm.getModule(proxyModuleId, (moduleData) => {\r\n        if (!Array.isArray(moduleData) || moduleData.length === 0)\r\n          return rej(\r\n            new Error(`assertion fail: proxy module is empty: ${proxyModuleId}`)\r\n          )\r\n        if (moduleData.length !== 1)\r\n          return rej(\r\n            new Error(\r\n              `assertion fail: proxy module has multiple data: ${proxyModuleId}`\r\n            )\r\n          )\r\n        res(moduleData[0])\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * emit event when a proxyModule has been updated\r\n   */\r\n  onProxyModuleUpdate(\r\n    cb: (proxyModuleId: string, data: any[], prevData: any[]) => void\r\n  ) {\r\n    this.vmm.addModuleListener((proxyModuleId, data, prevData) => {\r\n      cb(proxyModuleId, data, prevData)\r\n    })\r\n  }\r\n\r\n  close() {\r\n    this.vmm.close()\r\n  }\r\n\r\n  getProxyModuleId(sourceFilePath: string, key?: string) {\r\n    let prefix = this.proxyModulePrefix\r\n    if (key) prefix += `--${key}--`\r\n    return prefix + sourceFilePath\r\n  }\r\n\r\n  isProxyModuleId(id: string) {\r\n    return id.startsWith(this.proxyModulePrefix) && this.register[id]\r\n  }\r\n}\r\n","import { EventEmitter } from 'events'\r\nimport { debounce } from 'mini-debounce'\r\n\r\n/**\r\n * Types of page data updates.\r\n *\r\n * add:\r\n *  A new page is added.\r\n *  The page list module will be updated.\r\n * update:\r\n *  A page is updated.\r\n *  The page list module will be updated if it is static data change\r\n *  The page data module will be updated if it is runtime data change\r\n * delete:\r\n *  A page is deleted.\r\n *  The page list module will be updated.\r\n *  Buffered update of the deleted page will be canceled.\r\n */\r\ntype Update =\r\n  | {\r\n      type: 'add' | 'delete'\r\n      pageId: string\r\n    }\r\n  | {\r\n      type: 'update'\r\n      pageId: string\r\n      dataType: 'runtime' | 'static'\r\n    }\r\n\r\nexport type ScheduleUpdate = (update: Update) => void\r\n\r\n/**\r\n * Buffer page data updates.\r\n * Can flush a batch of updates together\r\n * and cancel unnecessary updates\r\n */\r\nexport class PageUpdateBuffer extends EventEmitter {\r\n  /**\r\n   * which pages should be updated\r\n   */\r\n  private pageUpdateBuffer = new Set<string>()\r\n\r\n  /**\r\n   * whether the page list should be updated\r\n   */\r\n  private pageListUpdateBuffer = false\r\n\r\n  private scheduleFlush: () => void\r\n\r\n  constructor() {\r\n    super()\r\n    this.scheduleFlush = debounce(() => {\r\n      let havePageUpdate = false\r\n      if (this.pageUpdateBuffer.size > 0) {\r\n        havePageUpdate = true\r\n        const updates = [...this.pageUpdateBuffer.values()]\r\n        this.emit('page', updates)\r\n        this.pageUpdateBuffer.clear()\r\n      }\r\n\r\n      if (this.pageListUpdateBuffer) {\r\n        // if we have just sent a page update,\r\n        // we don't need to trigger page list update.\r\n        // because during the page update hmr, the page list will automatically get updated\r\n        // (because the whole import chain will get re-imported)\r\n        if (!havePageUpdate) this.emit('page-list')\r\n        this.pageListUpdateBuffer = false\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  scheduleUpdate(update: Update) {\r\n    switch (update.type) {\r\n      case 'add':\r\n        this.pageListUpdateBuffer = true\r\n        break\r\n      case 'update':\r\n        if (update.dataType === 'static') this.pageListUpdateBuffer = true\r\n        else this.pageUpdateBuffer.add(update.pageId)\r\n        break\r\n      case 'delete':\r\n        this.pageListUpdateBuffer = true\r\n        this.pageUpdateBuffer.delete(update.pageId)\r\n        break\r\n      default:\r\n        throw new Error(`invalid update type ${JSON.stringify(update)}`)\r\n    }\r\n    this.scheduleFlush()\r\n  }\r\n\r\n  async batchUpdate(exec: (scheduleUpdate: ScheduleUpdate) => Promise<void>) {\r\n    let updates: Update[] | null = []\r\n    const _this = this\r\n\r\n    try {\r\n      await exec(scheduleUpdate)\r\n    } finally {\r\n      updates.forEach((update) => {\r\n        _this.scheduleUpdate(update)\r\n      })\r\n      updates = null\r\n      this.scheduleFlush()\r\n    }\r\n\r\n    function scheduleUpdate(update: Update) {\r\n      if (!updates) {\r\n        // the batch lifetime has already expired\r\n        // add it to buffer directly\r\n        _this.scheduleUpdate(update)\r\n        return\r\n      }\r\n      // store it, will flush these updates together later\r\n      updates.push(update)\r\n    }\r\n  }\r\n}\r\n","import { dequal } from 'dequal'\r\n\r\nimport { PageUpdateBuffer } from './UpdateBuffer'\r\nimport {\r\n  VirtualModuleAPIs,\r\n  FileHandlerAPIs,\r\n  VirtualModulesManager,\r\n} from '../utils/virtual-module'\r\nimport type { FileHandler, PageAPIs, DataPiece } from './types.doc'\r\n\r\nconst PAGE_MODULE_PREFIX = '/@vp-page'\r\nconst ensurePageId = (moduleId: string) =>\r\n  moduleId.startsWith(PAGE_MODULE_PREFIX)\r\n    ? moduleId.slice(PAGE_MODULE_PREFIX.length)\r\n    : moduleId\r\nconst ensureModuleId = (pageId: string) =>\r\n  pageId.startsWith(PAGE_MODULE_PREFIX) ? pageId : PAGE_MODULE_PREFIX + pageId\r\n\r\nconst isPageRelatedModule = (moduleId: string) =>\r\n  moduleId.startsWith(PAGE_MODULE_PREFIX)\r\n\r\n/**\r\n * building upon VirtualModulesManager,\r\n * PagesDataKeeper recognize and handle page modules.\r\n */\r\nexport class PagesDataKeeper extends PageUpdateBuffer {\r\n  /**\r\n   * this.pages is a cache of this.virtualModulesManager.getModules\r\n   * which is updated in batch (may be outdated for a short time)\r\n   */\r\n  private readonly pages: PagesDataInternal = {}\r\n\r\n  constructor(private readonly virtualModulesManager: VirtualModulesManager) {\r\n    super()\r\n    virtualModulesManager.getModules((modules) => {\r\n      Object.entries(modules).forEach(([moduleId, data]) => {\r\n        this.setPageData(moduleId, data)\r\n      })\r\n      virtualModulesManager.addModuleListener((moduleId, data) => {\r\n        this.setPageData(moduleId, data)\r\n      }, isPageRelatedModule)\r\n    }, isPageRelatedModule)\r\n  }\r\n\r\n  /** turn PagesDataInternal to PagesData */\r\n  public getPages(): PagesData {\r\n    return Object.fromEntries(\r\n      Object.entries(this.pages).map(([pageId, page]) => [\r\n        pageId,\r\n        transformOnePageDataInternal(page),\r\n      ])\r\n    )\r\n  }\r\n\r\n  public getPage(pageId: string): OnePageData | null {\r\n    const page = this.pages[pageId]\r\n    if (!page) return null\r\n    return transformOnePageDataInternal(page)\r\n  }\r\n\r\n  /**\r\n   * when low-level page virtual modules has changed, update this.pages data\r\n   * and notify listeners\r\n   */\r\n  private setPageData(moduleId: string, rawData: any[]) {\r\n    const pageId = ensurePageId(moduleId)\r\n    const oldPageData: OnePageDataInternal | undefined = this.pages[pageId]\r\n    const pageData = this.createPageDataFromRaw(rawData)\r\n    // Page is deleted\r\n    if (!pageData) {\r\n      if (oldPageData) {\r\n        delete this.pages[pageId]\r\n        this.scheduleUpdate({\r\n          type: 'delete',\r\n          pageId,\r\n        })\r\n      }\r\n      return\r\n    }\r\n    // Page is added\r\n    if (!oldPageData) {\r\n      this.pages[pageId] = pageData\r\n      this.scheduleUpdate({\r\n        type: 'add',\r\n        pageId,\r\n      })\r\n      return\r\n    }\r\n    // Page is updated\r\n    this.pages[pageId] = pageData\r\n    if (!dequal(pageData.runtimeData, oldPageData.runtimeData)) {\r\n      this.scheduleUpdate({\r\n        type: 'update',\r\n        dataType: 'runtime',\r\n        pageId,\r\n      })\r\n    }\r\n    if (!dequal(pageData.staticData, oldPageData.staticData)) {\r\n      this.scheduleUpdate({\r\n        type: 'update',\r\n        dataType: 'static',\r\n        pageId,\r\n      })\r\n    }\r\n  }\r\n\r\n  private createPageDataFromRaw(rawData: any[]): OnePageDataInternal | null {\r\n    const pageData: OnePageDataInternal = {\r\n      runtimeData: {},\r\n      staticData: {},\r\n    }\r\n    const { runtimeData: dataMap, staticData: staticDataMap } = pageData\r\n    rawData.forEach((data: DataPiece) => {\r\n      if (!data) return\r\n      const { dataPath, staticData } = data\r\n      if (!dataPath && !staticData) return\r\n      const key = data.key ?? 'main'\r\n      const priority = data.priority ?? 1\r\n      if (dataPath) {\r\n        if (!dataMap[key] || priority > dataMap[key].priority)\r\n          dataMap[key] = { dataPath, priority }\r\n      }\r\n      if (staticData) {\r\n        if (!staticDataMap[key] || priority > staticDataMap[key].priority)\r\n          staticDataMap[key] = { staticData, priority }\r\n      }\r\n    })\r\n    if (isEmptyPage(pageData)) return null\r\n    return pageData\r\n\r\n    function isEmptyPage(pageData: OnePageDataInternal) {\r\n      const { runtimeData, staticData } = pageData\r\n      return (\r\n        Object.keys(runtimeData).length === 0 &&\r\n        Object.keys(staticData).length === 0\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * update page virtual modules according to fs files\r\n   */\r\n  public addFSWatcher(\r\n    baseDir: string,\r\n    globs: string[],\r\n    fileHandler: FileHandler\r\n  ) {\r\n    this.virtualModulesManager.addFSWatcher(\r\n      baseDir,\r\n      globs,\r\n      async (file, lowerAPI) => {\r\n        const pageAPIs = this.createPageAPIs(lowerAPI)\r\n        const res = await fileHandler(file, pageAPIs)\r\n        if (res) {\r\n          pageAPIs.addPageData(res)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  public createOneTimePageAPIs(updaterAPIs: VirtualModuleAPIs): PageAPIs {\r\n    const handlerAPI: FileHandlerAPIs = {\r\n      addModuleData(moduleId: string, data: any) {\r\n        // if the update has no upstream, use a constant name\r\n        updaterAPIs.addModuleData(moduleId, data, 'VP_ANONYMOUS_MODULE')\r\n      },\r\n      getModuleData: updaterAPIs.getModuleData,\r\n    }\r\n    return this.createPageAPIs(handlerAPI)\r\n  }\r\n\r\n  /**\r\n   * TODO:\r\n   * getRuntimeData and getStaticData are very inefficient to implement,\r\n   * redesign them in the next version\r\n   */\r\n  private createPageAPIs(lowerAPI: FileHandlerAPIs): PageAPIs {\r\n    const getRuntimeData = (pageId: string) => {\r\n      const moduleId = ensureModuleId(pageId)\r\n      // don't use pages as data source because this is a cache updated in batch.\r\n      // instead, get data by virtualModulesManager._getModuleDataNow\r\n      // which is updated immediately after updating virtual modules\r\n      const getDataObject = () => {\r\n        // reconstruct the data object, which is inefficient\r\n        const rawData = this.virtualModulesManager._getModuleDataNow(moduleId)\r\n        const pageData = this.createPageDataFromRaw(rawData)\r\n        if (!pageData) return {}\r\n        return pageData.runtimeData\r\n      }\r\n      const setData = (key: string, value: any) => {\r\n        lowerAPI.addModuleData(moduleId, {\r\n          key,\r\n          dataPath: value,\r\n        } as DataPiece)\r\n      }\r\n      const getData = (key: string) => {\r\n        const existValue = getDataObject()[key]\r\n        return existValue?.dataPath\r\n      }\r\n      return createProxy({ getDataObject, setData, getData })\r\n    }\r\n\r\n    const getStaticData = (pageId: string) => {\r\n      const moduleId = ensureModuleId(pageId)\r\n      const getDataObject = () => {\r\n        const rawData = this.virtualModulesManager._getModuleDataNow(moduleId)\r\n        const pageData = this.createPageDataFromRaw(rawData)\r\n        if (!pageData) return {}\r\n        return pageData.staticData\r\n      }\r\n      const setData = (key: string, value: any) => {\r\n        lowerAPI.addModuleData(moduleId, {\r\n          key,\r\n          staticData: value,\r\n        } as DataPiece)\r\n      }\r\n      const getData = (key: string) => {\r\n        const existValue = getDataObject()[key]\r\n        return existValue?.staticData\r\n      }\r\n      return createProxy({ getDataObject, setData, getData })\r\n    }\r\n\r\n    const addPageData = (dataPiece: DataPiece) => {\r\n      const moduleId = ensureModuleId(dataPiece.pageId)\r\n      lowerAPI.addModuleData(moduleId, dataPiece)\r\n    }\r\n\r\n    return {\r\n      getRuntimeData,\r\n      getStaticData,\r\n      addPageData,\r\n    }\r\n\r\n    function createProxy({\r\n      getDataObject,\r\n      setData,\r\n      getData,\r\n    }: {\r\n      getDataObject: () => object\r\n      setData: (key: string, value: any) => void\r\n      getData: (key: string) => any\r\n    }) {\r\n      return new Proxy(\r\n        {} as {\r\n          [key: string]: string\r\n        },\r\n        {\r\n          ...defaultProxyTraps,\r\n          set(target, key: string, value) {\r\n            setData(key, value)\r\n            return true\r\n          },\r\n          get(target, key: string) {\r\n            return getData(key)\r\n          },\r\n          has(target, key) {\r\n            return Reflect.has(getDataObject(), key)\r\n          },\r\n          ownKeys: function (target) {\r\n            return Reflect.ownKeys(getDataObject())\r\n          },\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport interface PagesData {\r\n  /**\r\n   * pageId: The page route path.\r\n   * User can register multiple page data with same pageId,\r\n   * as long as they have different keys.\r\n   * Page data with same pageId will be merged.\r\n   *\r\n   * @example '/posts/hello-world'\r\n   */\r\n  [pageId: string]: OnePageData\r\n}\r\n\r\nexport interface OnePageData {\r\n  data: {\r\n    [key: string]: string\r\n  }\r\n  staticData: {\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\ninterface PagesDataInternal {\r\n  [pageId: string]: OnePageDataInternal\r\n}\r\n\r\ninterface OnePageDataInternal {\r\n  runtimeData: {\r\n    /**\r\n     * The value of runtimeData should be a path to module\r\n     * (to be evaluated at runtime)\r\n     */\r\n    [key: string]: { dataPath: string; priority: number }\r\n  }\r\n  staticData: {\r\n    /**\r\n     * The value of staticData can be any json value\r\n     */\r\n    [key: string]: { staticData: any; priority: number }\r\n  }\r\n}\r\n\r\nconst defaultProxyTraps = Object.fromEntries(\r\n  Object.getOwnPropertyNames(Reflect).map((fnName) => [\r\n    fnName,\r\n    () => {\r\n      throw new Error(`unsupported operation on page data object proxy`)\r\n    },\r\n  ])\r\n)\r\n\r\nfunction transformOnePageDataInternal(page: OnePageDataInternal): OnePageData {\r\n  const runtimeData = Object.fromEntries(\r\n    Object.entries(page.runtimeData).map(([key, { dataPath }]) => [\r\n      key,\r\n      dataPath,\r\n    ])\r\n  )\r\n  const staticData = Object.fromEntries(\r\n    Object.entries(page.staticData).map(([key, { staticData }]) => [\r\n      key,\r\n      staticData,\r\n    ])\r\n  )\r\n  return { data: runtimeData, staticData }\r\n}\r\n","import * as path from 'path'\r\nimport { EventEmitter } from 'events'\r\nimport slash from 'slash'\r\n\r\nimport {\r\n  extractStaticData,\r\n  VirtualModulesManager,\r\n} from '../utils/virtual-module'\r\nimport { PagesDataKeeper, PagesData, OnePageData } from './PagesDataKeeper'\r\nimport type { FindPages, PageHelpers, FileHandler, PageAPIs } from './types.doc'\r\n\r\nexport class PageStrategy extends EventEmitter {\r\n  protected pagesDir: string = '/pagesDir_not_initialized'\r\n  private virtualModulesManager: VirtualModulesManager = null as any\r\n  private pagesDataKeeper: PagesDataKeeper = null as any\r\n  private started = false\r\n\r\n  constructor(private findPages: FindPages) {\r\n    super()\r\n  }\r\n\r\n  /**\r\n   * start() will be called by the vite buildStart hook,\r\n   * which may be called multiple times.\r\n   * we only execute it once\r\n   */\r\n  public start(pagesDir: string, virtualModulesManager: VirtualModulesManager) {\r\n    if (this.started) return\r\n    this.started = true\r\n    this.pagesDir = pagesDir\r\n\r\n    this.virtualModulesManager = virtualModulesManager\r\n    this.pagesDataKeeper = new PagesDataKeeper(virtualModulesManager)\r\n    this.pagesDataKeeper.on('page', (updates: string[]) => {\r\n      this.emit('page', updates)\r\n    })\r\n    this.pagesDataKeeper.on('page-list', () => {\r\n      this.emit('page-list')\r\n    })\r\n\r\n    this.virtualModulesManager.scheduleUpdate(\r\n      'pages-init',\r\n      async (virtualModuleAPIs) => {\r\n        this.oneTimePageAPIs =\r\n          this.pagesDataKeeper.createOneTimePageAPIs(virtualModuleAPIs)\r\n        const helpers = this.createHelpers(() => {\r\n          throw new Error(\r\n            `No defaultFileHandler found. You should pass fileHandler argument when calling watchFiles`\r\n          )\r\n        })\r\n        await this.findPages(pagesDir, helpers)\r\n      }\r\n    )\r\n  }\r\n\r\n  // these are one-time api that are only used in \"pages-init\"\r\n  private oneTimePageAPIs: PageAPIs = null as any\r\n\r\n  public getPages(): Promise<PagesData> {\r\n    if (!this.started) throw new Error(`PageStrategy not started yet`)\r\n    return new Promise((resolve) => {\r\n      this.virtualModulesManager.callOnceWhenIdle(() => {\r\n        resolve(this.pagesDataKeeper.getPages())\r\n      })\r\n    })\r\n  }\r\n\r\n  public getPage(pageId: string): Promise<OnePageData | null> {\r\n    if (!this.started) throw new Error(`PageStrategy not started yet`)\r\n    return new Promise((resolve) => {\r\n      this.virtualModulesManager.callOnceWhenIdle(() => {\r\n        resolve(this.pagesDataKeeper.getPage(pageId))\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Custom PageStrategy can use it to create helpers with custom defaultFileHandler\r\n   */\r\n  protected createHelpers(defaultFileHandler: FileHandler): PageHelpers {\r\n    const helpers: PageHelpers = {\r\n      extractStaticData,\r\n      watchFiles,\r\n      ...this.oneTimePageAPIs,\r\n    }\r\n    const _this = this\r\n    return helpers\r\n\r\n    function watchFiles(\r\n      baseDir: string,\r\n      arg2?: string | string[] | FileHandler,\r\n      arg3?: FileHandler\r\n    ) {\r\n      const { pagesDir, pagesDataKeeper } = _this\r\n      // Strip trailing slash and make absolute\r\n      baseDir = slash(path.resolve(pagesDir, baseDir))\r\n      let globs: string[]\r\n      let fileHandler: FileHandler\r\n      if (typeof arg2 === 'function') {\r\n        globs = ['**/*']\r\n        fileHandler = arg2\r\n      } else {\r\n        globs = Array.isArray(arg2) ? arg2 : [arg2 || '**/*']\r\n        fileHandler = arg3 || defaultFileHandler\r\n      }\r\n\r\n      pagesDataKeeper.addFSWatcher(baseDir, globs, fileHandler)\r\n    }\r\n  }\r\n}\r\n\r\nexport * from './types.doc'\r\n","import { PageStrategy } from '..'\r\nimport { extractStaticData, File } from '../../utils/virtual-module'\r\nimport type { FileHandler, FindPages } from '../types.doc'\r\n\r\nexport class DefaultPageStrategy extends PageStrategy {\r\n  constructor(\r\n    opts: { extraFindPages?: FindPages; fileHandler?: FileHandler } = {}\r\n  ) {\r\n    const { extraFindPages, fileHandler = defaultFileHandler } = opts\r\n    // pass a wrapped findPages function to super class\r\n    super((pagesDir, helpersFromParent) => {\r\n      // we can create our own helpers, providing a default fileHandler\r\n      // and not using helpersFromParent\r\n      const helpers = this.createHelpers(fileHandler)\r\n      helpers.watchFiles(pagesDir, '**/*$.{md,mdx,js,jsx,ts,tsx}')\r\n      if (typeof extraFindPages === 'function') {\r\n        extraFindPages(pagesDir, helpers)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * The defaultFileHandler return the result to caller,\r\n * instead of directly setting the pageData object.\r\n * so that it is more useful to users.\r\n */\r\nexport const defaultFileHandler: FileHandler = async (file: File, api) => {\r\n  const pagePublicPath = getPagePublicPath(file.relative)\r\n\r\n  const staticData = await extractStaticData(file)\r\n\r\n  if (staticData.sourceType === 'md') {\r\n    api.addPageData({\r\n      pageId: pagePublicPath,\r\n      key: 'outlineInfo',\r\n      dataPath: `${file.path}?outlineInfo`,\r\n    })\r\n  }\r\n\r\n  return {\r\n    pageId: pagePublicPath,\r\n    dataPath: file.path,\r\n    staticData,\r\n  }\r\n}\r\n\r\n/**\r\n * turn `sub-path/page2/index.tsx` into `/sub-path/page2`\r\n */\r\nexport function getPagePublicPath(relativePageFilePath: string) {\r\n  let pagePublicPath = relativePageFilePath.replace(\r\n    /\\$\\.(md|mdx|js|jsx|ts|tsx)$/,\r\n    ''\r\n  )\r\n  pagePublicPath = pagePublicPath.replace(/index$/, '')\r\n  // remove trailing slash\r\n  pagePublicPath = pagePublicPath.replace(/\\/$/, '')\r\n  // ensure starting slash\r\n  pagePublicPath = pagePublicPath.replace(/^\\//, '')\r\n  pagePublicPath = `/${pagePublicPath}`\r\n\r\n  // turn [id] into :id\r\n  // so that react-router can recognize it as url params\r\n  pagePublicPath = pagePublicPath.replace(\r\n    /\\[(.*?)\\]/g,\r\n    (_, paramName) => `:${paramName}`\r\n  )\r\n\r\n  return pagePublicPath\r\n}\r\n","import slash from 'slash'\r\nimport type { PagesData } from './PagesDataKeeper'\r\n\r\nexport async function renderPageList(pagesData: PagesData, isBuild: boolean) {\r\n  const addPagesData = Object.entries(pagesData).map(\r\n    ([pageId, { staticData }]) => {\r\n      let subPath = pageId\r\n      if (subPath === '/') {\r\n        // import(\"/@react-pages/pages/\") would make vite confused\r\n        // so we change the sub path\r\n        subPath = '/index__'\r\n      }\r\n      const dataModulePath = `/@react-pages/pages${subPath}`\r\n      let code = `\r\npages[\"${pageId}\"] = {};\r\npages[\"${pageId}\"].data = () => import(\"${dataModulePath}\");\r\npages[\"${pageId}\"].staticData = ${JSON.stringify(cleanStaticData(staticData))};`\r\n      return code\r\n    }\r\n  )\r\n  return `\r\nconst pages = {};\r\n${addPagesData.join('\\n')}\r\nexport default pages;\r\n`\r\n}\r\n\r\nexport async function renderPageListInSSR(pagesData: PagesData) {\r\n  const addPagesData = Object.entries(pagesData).map(\r\n    ([pageId, { staticData }], index) => {\r\n      let subPath = pageId\r\n      if (subPath === '/') {\r\n        // import(\"/@react-pages/pages/\") would make vite confused\r\n        // so we change the sub path\r\n        subPath = '/index__'\r\n      }\r\n      const code = `\r\npages[\"${pageId}\"] = {};\r\nimport page${index} from \"/@react-pages/pages${subPath}\";\r\npages[\"${pageId}\"] = page${index};`\r\n      return code\r\n    }\r\n  )\r\n  return `\r\nconst pages = {};\r\n${addPagesData.join('\\n')}\r\nexport default pages;\r\n`\r\n}\r\n\r\nexport function renderOnePageData(onePageData: { [dataKey: string]: string }) {\r\n  const importModule = Object.entries(onePageData).map(\r\n    ([dataKey, path], idx) => `\r\nimport * as m${idx} from \"${slash(path)}\";\r\nmodules[\"${dataKey}\"] = m${idx};`\r\n  )\r\n  return `\r\n  const modules = {};\r\n  ${importModule.join('\\n')}\r\n  export default modules;`\r\n}\r\n\r\nexport function renderAllPagesOutlines(pagesData: PagesData) {\r\n  const res = [] as string[]\r\n  Object.entries(pagesData).map(([pageId, { staticData }], index1) => {\r\n    const outlinesForThisPage = [] as any[]\r\n    // check all data pieces (identified by key within a page) of all pages\r\n    Object.entries(staticData).forEach(([key, dataPiece], index2) => {\r\n      if (dataPiece?.sourceType === 'md' && dataPiece.__sourceFilePath) {\r\n        // collect outline info of markdown pages\r\n        const varName = `pageOutline_${index1}_${index2}`\r\n        outlinesForThisPage.push({\r\n          key,\r\n          varName,\r\n          importOutlineInfo: `import * as ${varName} from ${JSON.stringify(\r\n            dataPiece.__sourceFilePath + '?outlineInfo'\r\n          )}`,\r\n        })\r\n      }\r\n    })\r\n    if (outlinesForThisPage.length === 0) return\r\n    res.push(`allPagesOutlines[\"${pageId}\"] = {};`)\r\n    outlinesForThisPage.forEach(({ key, varName, importOutlineInfo }) => {\r\n      res.push(importOutlineInfo)\r\n      res.push(`allPagesOutlines[\"${pageId}\"][\"${key}\"] = ${varName};`)\r\n    })\r\n  })\r\n  return `\r\nexport const allPagesOutlines = {};\r\n${res.join('\\n')}\r\n`\r\n}\r\n\r\n// filter out internal data field in staticData\r\n// don't leak them into build output assets\r\nfunction cleanStaticData(staticData: any) {\r\n  if (!staticData || typeof staticData !== 'object') return staticData\r\n  return Object.fromEntries(\r\n    Object.entries(staticData).map(([key, value]: [string, any]) => {\r\n      if (value?.__sourceFilePath)\r\n        return [\r\n          key,\r\n          {\r\n            ...value,\r\n            __sourceFilePath: undefined,\r\n          },\r\n        ]\r\n      return [key, value]\r\n    })\r\n  )\r\n}\r\n","import fs from 'fs-extra'\r\nimport * as path from 'path'\r\nimport slash from 'slash'\r\n\r\nexport async function resolveTheme(pagesDirPath: string) {\r\n  for (let filename of ['_theme.js', '_theme.ts', '_theme.jsx', '_theme.tsx']) {\r\n    filename = path.join(pagesDirPath, filename)\r\n    if (await fs.pathExists(filename)) {\r\n      return slash(filename)\r\n    }\r\n  }\r\n  throw new Error(\"can't find theme inside pagesDir: \" + pagesDirPath)\r\n}\r\n","import type { MdxjsEsm, MdxJsxFlowElement } from 'mdast-util-mdx'\r\n\r\n/**\r\n * create mdast node for expression:\r\n * import * as name from 'from'\r\n */\r\nexport function createNameSpaceImportNode({\r\n  name,\r\n  from,\r\n}: {\r\n  name: string\r\n  from: string\r\n}): MdxjsEsm {\r\n  return {\r\n    type: 'mdxjsEsm',\r\n    value: '',\r\n    data: {\r\n      estree: {\r\n        type: 'Program',\r\n        sourceType: 'module',\r\n        body: [\r\n          {\r\n            type: 'ImportDeclaration',\r\n            specifiers: [\r\n              {\r\n                type: 'ImportNamespaceSpecifier',\r\n                local: {\r\n                  type: 'Identifier',\r\n                  name,\r\n                },\r\n              },\r\n            ],\r\n            source: {\r\n              type: 'Literal',\r\n              value: from,\r\n              raw: JSON.stringify(from),\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\n/**\r\n * create mdast node for expression:\r\n * import name from 'from'\r\n */\r\nexport function createDefaultImportNode({\r\n  name,\r\n  from,\r\n}: {\r\n  name: string\r\n  from: string\r\n}): MdxjsEsm {\r\n  return {\r\n    type: 'mdxjsEsm',\r\n    value: '',\r\n    data: {\r\n      estree: {\r\n        type: 'Program',\r\n        sourceType: 'module',\r\n        body: [\r\n          {\r\n            type: 'ImportDeclaration',\r\n            specifiers: [\r\n              {\r\n                type: 'ImportDefaultSpecifier',\r\n                local: {\r\n                  type: 'Identifier',\r\n                  name,\r\n                },\r\n              },\r\n            ],\r\n            source: {\r\n              type: 'Literal',\r\n              value: from,\r\n              raw: JSON.stringify(from),\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\n/**\r\n * create mdast node for expression:\r\n * <Component {...props} />\r\n */\r\nexport function createJSXWithSpreadPropsNode({\r\n  Component,\r\n  props,\r\n}: {\r\n  Component: string\r\n  props: string\r\n}): MdxJsxFlowElement {\r\n  return {\r\n    type: 'mdxJsxFlowElement',\r\n    name: Component,\r\n    data: {\r\n      _mdxExplicitJsx: true,\r\n    },\r\n    children: [],\r\n    attributes: [\r\n      {\r\n        type: 'mdxJsxExpressionAttribute',\r\n        value: '',\r\n        data: {\r\n          estree: {\r\n            type: 'Program',\r\n            sourceType: 'module',\r\n            body: [\r\n              {\r\n                type: 'ExpressionStatement',\r\n                expression: {\r\n                  type: 'ObjectExpression',\r\n                  properties: [\r\n                    {\r\n                      type: 'SpreadElement',\r\n                      argument: {\r\n                        type: 'Identifier',\r\n                        name: props,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  }\r\n}\r\n","/// <reference types=\"remark-mdx\" />\r\nimport type { Root } from 'mdast'\r\nimport type { MdxjsEsm } from 'mdast-util-mdx'\r\nimport {\r\n  createJSXWithSpreadPropsNode,\r\n  createNameSpaceImportNode,\r\n} from '../../utils/mdastUtils'\r\n\r\nexport function DemoMdxPlugin() {\r\n  return transformer\r\n\r\n  function transformer(tree: Root, file: any) {\r\n    const children = tree.children\r\n\r\n    const addImports: MdxjsEsm[] = []\r\n\r\n    children.forEach((child, index) => {\r\n      // find jsx node like: <Demo src=\"srcValue\" />\r\n      if (child.type === 'mdxJsxFlowElement' && child.name === 'Demo') {\r\n        const srcAttr = child.attributes.find(\r\n          (attr) =>\r\n            attr.type === 'mdxJsxAttribute' &&\r\n            attr.name === 'src' &&\r\n            typeof attr.value === 'string'\r\n        )\r\n        const srcValue = srcAttr?.value\r\n        if (srcValue) {\r\n          const nextIndex = addImports.length\r\n          const varName = `_demo${nextIndex}`\r\n          // add import:\r\n          // import * as varName from \"${srcValue}?demo\"\r\n          addImports.push(\r\n            createNameSpaceImportNode({\r\n              name: varName,\r\n              from: `${srcValue}?demo`,\r\n            })\r\n          )\r\n          // replace this node with:\r\n          // <Demo {...varName} />\r\n          children.splice(\r\n            index,\r\n            1,\r\n            createJSXWithSpreadPropsNode({ Component: 'Demo', props: varName })\r\n          )\r\n        }\r\n      }\r\n    })\r\n\r\n    children.unshift(...addImports)\r\n  }\r\n}\r\n","import { strip } from 'jest-docblock'\r\nimport { ProxyModulesManager } from '../../utils/virtual-module'\r\nimport { extractStaticData } from '../../utils/virtual-module/utils'\r\n\r\n// mark demo proxy files as virtual files to avoid vite warning \"missing source files\"\r\n// https://github.com/vitejs/vite/blob/60721ac53a1bf326d1cac097f23642faede234ff/packages/vite/src/node/server/sourcemap.ts#L39\r\n// https://vitejs.dev/guide/api-plugin.html#virtual-modules-convention\r\nconst DEMO_PROXY_PREFIX = '\\0/@react-pages/demos'\r\n\r\nexport class DemoModuleManager {\r\n  private pmm = new ProxyModulesManager(DEMO_PROXY_PREFIX)\r\n\r\n  registerProxyModule(demoPath: string) {\r\n    return this.pmm.registerProxyModule(demoPath, async (file) => {\r\n      const content = await file.read()\r\n      const staticData = await extractStaticData(file)\r\n      // strip staticData notation\r\n      const code = strip(content)\r\n      return {\r\n        demoPath,\r\n        code,\r\n        staticData,\r\n      }\r\n    })\r\n  }\r\n\r\n  isProxyModuleId(id: string) {\r\n    return this.pmm.isProxyModuleId(id)\r\n  }\r\n\r\n  async loadProxyModule(demoProxyId: string) {\r\n    const data = await this.pmm.getProxyModuleData(demoProxyId)\r\n    const { demoPath, code, staticData } = data ?? {}\r\n    if (!demoPath || !code || !staticData)\r\n      throw new Error(`assertion fail: invalid demo data: ${demoProxyId}`)\r\n\r\n    return `export * from \"${demoPath}\";\r\n    export { default } from \"${demoPath}\";\r\n    \r\n    const code = ${JSON.stringify(strip(code))};\r\n    const title = ${JSON.stringify(staticData.title)};\r\n    const desc = ${JSON.stringify(staticData.description || staticData.desc)};\r\n    \r\n    export const demoMeta = { code, title, desc };\r\n    export const isDemo = true;`\r\n  }\r\n\r\n  onUpdate(cb: (reloadPath: string) => void) {\r\n    this.pmm.onProxyModuleUpdate(cb)\r\n  }\r\n\r\n  close() {\r\n    this.pmm.close()\r\n  }\r\n}\r\n\r\nexport * from './mdx-plugin'\r\n","import {\r\n  Project,\r\n  TypeElementMemberedNode,\r\n  Node,\r\n  TypeChecker,\r\n  ts,\r\n} from 'ts-morph'\r\n\r\nexport type TsInfo =\r\n  | {\r\n      // example: type A = { k: v }\r\n      type: 'object-literal'\r\n      name: string\r\n      description: string\r\n      properties: TsPropertyOrMethodInfo[]\r\n    }\r\n  | {\r\n      // example: interface MyInterface { k: v }\r\n      type: 'interface'\r\n      name: string\r\n      description: string\r\n      properties: TsPropertyOrMethodInfo[]\r\n    }\r\n  | {\r\n      // complex type literal\r\n      // example: type A = 'asd' | 123\r\n      type: 'other'\r\n      name: string\r\n      description: string\r\n      text: string\r\n    }\r\n\r\nexport interface TsPropertyOrMethodInfo {\r\n  name: string\r\n  type: string\r\n  description: string\r\n  defaultValue: string | undefined\r\n  optional: boolean\r\n}\r\n\r\nconst defaultTsConfig: ts.CompilerOptions = {\r\n  target: ts.ScriptTarget.ESNext,\r\n  lib: ['lib.esnext.full.d.ts'],\r\n  moduleResolution: ts.ModuleResolutionKind.NodeJs,\r\n}\r\n\r\nexport function collectInterfaceInfo(\r\n  fileName: string,\r\n  exportName: string,\r\n  options: ts.CompilerOptions = {}\r\n): TsInfo {\r\n  const project = new Project({\r\n    compilerOptions: {\r\n      ...defaultTsConfig,\r\n      ...options,\r\n    },\r\n  })\r\n\r\n  const sourceFile = project.addSourceFileAtPath(fileName)\r\n  const typeChecker = project.getTypeChecker()\r\n\r\n  const exportedDeclarations = sourceFile\r\n    .getExportedDeclarations()\r\n    .get(exportName)\r\n  if (!exportedDeclarations) {\r\n    throw new Error(\r\n      `Can not find export. ${JSON.stringify({ exportName, fileName })}`\r\n    )\r\n  }\r\n  if (exportedDeclarations.length !== 1) {\r\n    throw new Error(\r\n      `Unexpected exportedDeclaration.length. ${JSON.stringify({\r\n        exportName,\r\n        fileName,\r\n      })}`\r\n    )\r\n  }\r\n\r\n  const node = exportedDeclarations[0]\r\n\r\n  if (Node.isTypeAliasDeclaration(node)) {\r\n    // type A = { k: v } (type literal)\r\n    // or type A = 'asd' | 123 (complex type)\r\n    const name = node.getName()\r\n    const description = node\r\n      .getJsDocs()\r\n      .map((jsDoc) => {\r\n        return jsDoc.getDescription().trim()\r\n      })\r\n      .join('\\n\\n')\r\n    const typeNode = node.getTypeNode()\r\n\r\n    if (Node.isTypeLiteral(typeNode)) {\r\n      // example: type A = { k: v }\r\n      const members = handleTypeElementMembered(typeNode, typeChecker)\r\n      return {\r\n        type: 'object-literal',\r\n        name,\r\n        description,\r\n        properties: members,\r\n      }\r\n    } else {\r\n      // example: type A = 'asd' | 123\r\n      return {\r\n        type: 'other',\r\n        name,\r\n        description,\r\n        text:\r\n          typeNode?.getText({\r\n            includeJsDocComments: false,\r\n            trimLeadingIndentation: true,\r\n          }) || '',\r\n      }\r\n    }\r\n  }\r\n\r\n  if (Node.isInterfaceDeclaration(node)) {\r\n    const name = node.getName()\r\n    const description = node\r\n      .getJsDocs()\r\n      .map((jsDoc) => {\r\n        return jsDoc.getDescription().trim()\r\n      })\r\n      .join('\\n\\n')\r\n    const members = handleTypeElementMembered(node, typeChecker)\r\n    return { type: 'interface', name, description, properties: members }\r\n  }\r\n\r\n  throw new Error('unexpected node type: ' + node.getKindName())\r\n}\r\n\r\n// handle Interface or TypeLiteral\r\n// iterate members at type level\r\n// which is higher than ast level, so that we can get inherited membered from a Interface\r\n// https://github.com/dsherret/ts-morph/issues/457#issuecomment-427688926\r\nfunction handleTypeElementMembered(\r\n  node: TypeElementMemberedNode & Node,\r\n  typeChecker: TypeChecker\r\n): TsPropertyOrMethodInfo[] {\r\n  const result: TsPropertyOrMethodInfo[] = []\r\n  const nodeType = node.getType()\r\n  const properties = nodeType.getProperties()\r\n  for (const prop of properties) {\r\n    const name = prop.getName()\r\n    const description = ts.displayPartsToString(\r\n      prop.compilerSymbol.getDocumentationComment(typeChecker.compilerObject)\r\n    )\r\n    const type = prop.getTypeAtLocation(node).getText()\r\n    const defaultValue = (() => {\r\n      let res = ''\r\n      prop.getJsDocTags().find((tag) => {\r\n        const match = ['defaultvalue', 'default'].includes(\r\n          tag.getName().toLowerCase()\r\n        )\r\n        if (match) {\r\n          res = ts.displayPartsToString(tag.getText())\r\n          return true\r\n        }\r\n      })\r\n      return res\r\n    })()\r\n    const optional = prop.isOptional()\r\n    result.push({\r\n      name,\r\n      description,\r\n      type,\r\n      defaultValue,\r\n      optional,\r\n    })\r\n  }\r\n  return result\r\n}\r\n\r\n// an alternative way to implement handleTypeElementMembered\r\n// iterate members at ast level\r\n// not used. just for backup...\r\nfunction handleTypeElementMembered2(\r\n  node: TypeElementMemberedNode & Node,\r\n  typeChecker: TypeChecker\r\n): TsPropertyOrMethodInfo[] {\r\n  const result: TsPropertyOrMethodInfo[] = []\r\n  node.getMembers().forEach((member) => {\r\n    if (Node.isPropertySignature(member) || Node.isMethodSignature(member)) {\r\n      const memberSymbol = member.getSymbolOrThrow()\r\n\r\n      const name = member.getName()\r\n\r\n      // or use this to get description?\r\n      // const description = ts.displayPartsToString(\r\n      //   memberSymbol.compilerSymbol.getDocumentationComment(\r\n      //     typeChecker.compilerObject\r\n      //   )\r\n      // )\r\n      // My consideration: getJsDocs is newer than getDocumentationComment\r\n      // and ts-morph docs recommend using getJsDocs:\r\n      // https://github.com/dsherret/ts-morph/blob/cea07aa7759ecf5a1e9f90b628334b8bd617c624/docs/details/documentation.md#L59\r\n      const description = member\r\n        .getJsDocs()\r\n        .map((jsDoc) => {\r\n          return jsDoc.getDescription().trim()\r\n        })\r\n        .join('\\n\\n')\r\n\r\n      const type = member.getType().getText()\r\n\r\n      const defaultValue = (() => {\r\n        let res = ''\r\n        member.getJsDocs().find((jsDoc) =>\r\n          jsDoc.getTags().find((tag) => {\r\n            const match = ['defaultvalue', 'default'].includes(\r\n              tag.getTagName().toLowerCase()\r\n            )\r\n            if (match) {\r\n              res = tag.getCommentText() || ''\r\n              return true\r\n            }\r\n          })\r\n        )\r\n        return res\r\n      })()\r\n\r\n      // or use member.hasQuestionToken()\r\n      const optional = memberSymbol.isOptional()\r\n\r\n      result.push({\r\n        name,\r\n        description,\r\n        type,\r\n        defaultValue,\r\n        optional,\r\n      })\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n * ref:\r\n *\r\n * https://github.com/microsoft/TypeScript/wiki/Using-the-Compiler-API\r\n *\r\n * https://stackoverflow.com/questions/59838013/how-can-i-use-the-ts-compiler-api-to-find-where-a-variable-was-defined-in-anothe\r\n *\r\n * https://stackoverflow.com/questions/60249275/typescript-compiler-api-generate-the-full-properties-arborescence-of-a-type-ide\r\n *\r\n * https://stackoverflow.com/questions/47429792/is-it-possible-to-get-comments-as-nodes-in-the-ast-using-the-typescript-compiler\r\n *\r\n * Instructions of learning ts compiler:\r\n * https://stackoverflow.com/a/58885450\r\n *\r\n * https://learning-notes.mistermicheels.com/javascript/typescript/compiler-api/\r\n */\r\n","/// <reference types=\"remark-mdx\" />\r\nimport type { Root } from 'mdast'\r\nimport type { MdxjsEsm } from 'mdast-util-mdx'\r\nimport {\r\n  createJSXWithSpreadPropsNode,\r\n  createNameSpaceImportNode,\r\n} from '../../utils/mdastUtils'\r\n\r\nexport function TsInfoMdxPlugin() {\r\n  return transformer\r\n\r\n  function transformer(tree: Root, file: any) {\r\n    const children = tree.children\r\n\r\n    const addImports: MdxjsEsm[] = []\r\n\r\n    children.forEach((child, index) => {\r\n      // find jsx node like: <TsInfo src=\"srcValue\" name=\"nameValue\" />\r\n      if (child.type === 'mdxJsxFlowElement' && child.name === 'TsInfo') {\r\n        const srcAttr = child.attributes.find(\r\n          (attr) =>\r\n            attr.type === 'mdxJsxAttribute' &&\r\n            attr.name === 'src' &&\r\n            typeof attr.value === 'string'\r\n        )\r\n        const srcValue = srcAttr?.value\r\n\r\n        const nameAttr = child.attributes.find(\r\n          (attr) =>\r\n            attr.type === 'mdxJsxAttribute' &&\r\n            attr.name === 'name' &&\r\n            typeof attr.value === 'string'\r\n        )\r\n        const nameValue = nameAttr?.value\r\n\r\n        if (srcValue && nameValue) {\r\n          const nextIndex = addImports.length\r\n          const varName = `_tsInfo${nextIndex}`\r\n          // add import:\r\n          // import * as varName from \"${srcValue}?tsInfo=${nameValue}\"\r\n          addImports.push(\r\n            createNameSpaceImportNode({\r\n              name: varName,\r\n              from: `${srcValue}?tsInfo=${nameValue}`,\r\n            })\r\n          )\r\n          // replace this node with:\r\n          // <TsInfo {...varName} />\r\n          children.splice(\r\n            index,\r\n            1,\r\n            createJSXWithSpreadPropsNode({\r\n              Component: 'TsInfo',\r\n              props: varName,\r\n            })\r\n          )\r\n        }\r\n      }\r\n    })\r\n\r\n    children.unshift(...addImports)\r\n  }\r\n}\r\n","import { ProxyModulesManager } from '../../utils/virtual-module'\r\nimport { collectInterfaceInfo } from './extract'\r\n\r\nconst PROXY_PREFIX = '/@react-pages/tsInfo'\r\n\r\n/**\r\n * TODO:\r\n * currently we only watch one sourceFilePath for each virtual module(proxyModule).\r\n * but if the sourceFilePath import other modules, and when that module has updated,\r\n * TsInfoModuleManager won't notice that.\r\n * we need a way to create virtual modules with dependencies.\r\n *\r\n * currently it is ok to tell users to write a whole type doc in a single file.\r\n * so supporting virtual modules with dependencies is not needed.\r\n * but supporting that feature would make our virtual module system more powerful.\r\n *\r\n * the same goes for DemoModuleManager.\r\n */\r\n\r\nexport class TsInfoModuleManager {\r\n  private pmm = new ProxyModulesManager(PROXY_PREFIX)\r\n\r\n  registerProxyModule(sourcePath: string, exportName: string) {\r\n    return this.pmm.registerProxyModule(\r\n      sourcePath,\r\n      async (file) => {\r\n        const tsInfo = collectInterfaceInfo(sourcePath, exportName)\r\n        return {\r\n          sourcePath,\r\n          exportName,\r\n          tsInfo,\r\n        }\r\n      },\r\n      exportName\r\n    )\r\n  }\r\n\r\n  isProxyModuleId(id: string) {\r\n    return this.pmm.isProxyModuleId(id)\r\n  }\r\n\r\n  async loadProxyModule(proxyModuleId: string) {\r\n    const data = await this.pmm.getProxyModuleData(proxyModuleId)\r\n    const { sourcePath, exportName, tsInfo } = data ?? {}\r\n    if (!sourcePath || !exportName || !tsInfo)\r\n      throw new Error(`assertion fail: invalid data: ${proxyModuleId}`)\r\n    return `export const data = ${JSON.stringify(tsInfo)};`\r\n  }\r\n\r\n  onUpdate(cb: (reloadPath: string) => void) {\r\n    this.pmm.onProxyModuleUpdate(cb)\r\n  }\r\n\r\n  close() {\r\n    this.pmm.close()\r\n  }\r\n}\r\n\r\nexport * from './mdx-plugin'\r\n","const bodyInjectRE = /<\\/body>/\r\nexport function injectHTMLTag(html: string, tagHtml: string) {\r\n  if (bodyInjectRE.test(html)) {\r\n    return html.replace(bodyInjectRE, `${tagHtml}\\n$&`)\r\n  }\r\n  // if no body, append\r\n  return html + `\\n` + tagHtml\r\n}\r\n","/// <reference types=\"remark-mdx\" />\r\nimport type { Root } from 'mdast'\r\nimport type { MdxjsEsm, MdxJsxFlowElement } from 'mdast-util-mdx'\r\nimport { createDefaultImportNode } from './mdastUtils'\r\n\r\nexport function FileTextMdxPlugin() {\r\n  return transformer\r\n\r\n  function transformer(tree: Root, file: any) {\r\n    const children = tree.children\r\n\r\n    const addImports: MdxjsEsm[] = []\r\n\r\n    children.forEach((child, index) => {\r\n      // find jsx node like: <FileText src=\"srcValue\" syntax=\"syntaxValue\" />\r\n      if (child.type === 'mdxJsxFlowElement' && child.name === 'FileText') {\r\n        const srcAttr = child.attributes.find(\r\n          (attr) =>\r\n            attr.type === 'mdxJsxAttribute' &&\r\n            attr.name === 'src' &&\r\n            typeof attr.value === 'string'\r\n        )\r\n        const srcValue = srcAttr?.value as string\r\n\r\n        const syntaxAttr = child.attributes.find(\r\n          (attr) =>\r\n            attr.type === 'mdxJsxAttribute' &&\r\n            attr.name === 'syntax' &&\r\n            typeof attr.value === 'string'\r\n        )\r\n        const syntaxValue = syntaxAttr?.value as string\r\n\r\n        if (srcValue && syntaxValue) {\r\n          const nextIndex = addImports.length\r\n          const varName = `_fileText${nextIndex}`\r\n          // add import:\r\n          // import varName from \"${srcValue}?raw\"\r\n          addImports.push(\r\n            createDefaultImportNode({\r\n              name: varName,\r\n              from: `${srcValue}?raw`,\r\n            })\r\n          )\r\n          // replace this node with:\r\n          // <FileText text={varName} syntax=\"syntaxValue\" />\r\n          children.splice(\r\n            index,\r\n            1,\r\n            createFileTextJSXNode({\r\n              text: varName,\r\n              syntax: syntaxValue,\r\n            })\r\n          )\r\n        }\r\n      }\r\n    })\r\n\r\n    children.unshift(...addImports)\r\n  }\r\n}\r\n\r\n/**\r\n * create mdast node for expression:\r\n * <FileText text={text} syntax=\"syntax\" />\r\n */\r\nfunction createFileTextJSXNode({\r\n  text,\r\n  syntax,\r\n}: {\r\n  text: string\r\n  syntax: string\r\n}): MdxJsxFlowElement {\r\n  return {\r\n    type: 'mdxJsxFlowElement',\r\n    name: 'FileText',\r\n    data: {\r\n      _mdxExplicitJsx: true,\r\n    },\r\n    children: [],\r\n    attributes: [\r\n      {\r\n        type: 'mdxJsxAttribute',\r\n        name: 'text',\r\n        value: {\r\n          type: 'mdxJsxAttributeValueExpression',\r\n          value: text,\r\n          data: {\r\n            estree: {\r\n              type: 'Program',\r\n              sourceType: 'module',\r\n              body: [\r\n                {\r\n                  type: 'ExpressionStatement',\r\n                  expression: {\r\n                    type: 'Identifier',\r\n                    name: text,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        type: 'mdxJsxAttribute',\r\n        name: 'syntax',\r\n        value: syntax,\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import type { Root } from 'remark-mdx'\r\n\r\n// collect headings\r\n// ref: https://github.com/syntax-tree/mdast-util-toc/blob/ba8f680a3cbcd96351febe2b73edb21598720945/lib/search.js#L67\r\n\r\nexport async function extractOutlineInfo(md: string) {\r\n  const { remark } = await import('remark')\r\n  const { default: remarkMdx } = await import('remark-mdx')\r\n  const { default: frontmatter } = await import('remark-frontmatter')\r\n  const { default: gfm } = await import('remark-gfm')\r\n  const { visit } = await import('unist-util-visit')\r\n  const { toString } = await import('mdast-util-to-string')\r\n  const { default: Slugger } = await import('github-slugger')\r\n\r\n  const ast: Root = remark().use(frontmatter).use(gfm).use(remarkMdx).parse(md)\r\n  const slugs = new Slugger()\r\n  const headings: { depth: number; text: string; id: string }[] = []\r\n\r\n  visit(ast, 'heading', (node) => {\r\n    const text = toString(node, { includeImageAlt: false })\r\n    let id =\r\n      node.data && node.data.hProperties && (node.data.hProperties as any).id\r\n    id = slugs.slug(id || text)\r\n    if (!id) return\r\n    headings.push({ depth: node.depth, text, id })\r\n  })\r\n\r\n  // debugger\r\n  return { ast, outline: headings }\r\n}\r\n\r\n// extractOutlineInfo(`\r\n// # t1\r\n// 123123\r\n// ## t1.1\r\n// 23412\r\n\r\n// import ChildContent from './ChildContent';\r\n\r\n// <ChildContent />\r\n\r\n// # t2\r\n// asd\r\n// `)\r\n\r\nexport type OutlineItem = {\r\n  depth: number\r\n  text: string\r\n  id: string\r\n}\r\n","import invariant from 'tiny-invariant'\r\nimport { dequal } from 'dequal'\r\n\r\nimport { ProxyModulesManager } from '../../utils/virtual-module'\r\nimport { extractOutlineInfo } from './extractOutlineInfo'\r\n\r\n// mark demo proxy files as virtual files to avoid vite warning \"missing source files\"\r\n// https://github.com/vitejs/vite/blob/60721ac53a1bf326d1cac097f23642faede234ff/packages/vite/src/node/server/sourcemap.ts#L39\r\n// https://vitejs.dev/guide/api-plugin.html#virtual-modules-convention\r\nexport const OUTLINE_INFO_MODULE_ID_PREFIX = '\\0/@react-pages/outline-info'\r\n\r\nexport class OutlineInfoModuleManager {\r\n  private pmm = new ProxyModulesManager(OUTLINE_INFO_MODULE_ID_PREFIX)\r\n\r\n  registerProxyModule(datasourceFilePath: string) {\r\n    return this.pmm.registerProxyModule(datasourceFilePath, async (file) => {\r\n      const content = await file.read()\r\n      const { outline } = await extractOutlineInfo(content)\r\n      return {\r\n        datasourceFilePath,\r\n        outline,\r\n        // content,\r\n      }\r\n    })\r\n  }\r\n\r\n  isProxyModuleId(id: string) {\r\n    return this.pmm.isProxyModuleId(id)\r\n  }\r\n\r\n  async loadProxyModule(proxyModuleId: string) {\r\n    const data = await this.pmm.getProxyModuleData(proxyModuleId)\r\n    const { outline } = data ?? {}\r\n    if (!outline)\r\n      throw new Error(`assertion fail: invalid outline data: ${proxyModuleId}`)\r\n\r\n    return `export const outline = ${JSON.stringify(outline)};`\r\n  }\r\n\r\n  onUpdate(cb: (reloadPath: string) => void) {\r\n    this.pmm.onProxyModuleUpdate((proxyModuleId: string, data, prevData) => {\r\n      invariant(data.length <= 1)\r\n      invariant(prevData.length <= 1)\r\n      const outline = data[0]?.outline\r\n      const prevOutline = prevData[0]?.outline\r\n      if (dequal(outline, prevOutline)) {\r\n        // outline hasn't changed. skip update\r\n        return\r\n      }\r\n      cb(proxyModuleId)\r\n    })\r\n  }\r\n\r\n  close() {\r\n    this.pmm.close()\r\n  }\r\n}\r\n","import * as path from 'path'\r\nimport type { PluggableList } from 'unified'\r\nimport type { Plugin, IndexHtmlTransformContext } from 'vite'\r\nimport type { OutputPlugin } from 'rollup'\r\nimport type { staticSiteGenerationConfig } from './types'\r\n\r\nimport {\r\n  DefaultPageStrategy,\r\n  defaultFileHandler,\r\n} from './page-strategy/DefaultPageStrategy'\r\nimport {\r\n  renderPageList,\r\n  renderPageListInSSR,\r\n  renderOnePageData,\r\n  renderAllPagesOutlines,\r\n} from './page-strategy/pageUtils'\r\nimport { PageStrategy } from './page-strategy'\r\nimport { resolveTheme } from './virtual-module-plugins/theme'\r\nimport {\r\n  DemoModuleManager,\r\n  DemoMdxPlugin,\r\n} from './virtual-module-plugins/demo-modules'\r\nimport {\r\n  TsInfoModuleManager,\r\n  TsInfoMdxPlugin,\r\n} from './virtual-module-plugins/ts-info-module'\r\nimport { injectHTMLTag } from './utils/injectHTMLTag'\r\nimport { VirtualModulesManager } from './utils/virtual-module'\r\nimport { FileTextMdxPlugin } from './utils/mdx-plugin-file-text'\r\nimport {\r\n  OutlineInfoModuleManager,\r\n  OUTLINE_INFO_MODULE_ID_PREFIX,\r\n} from './virtual-module-plugins/outline-info-module'\r\n\r\n/**\r\n * This is a public API that users use in their index.html.\r\n * Changing this would introduce breaking change for users.\r\n */\r\nconst appEntryId = '/@pages-infra/main.js'\r\n\r\n/**\r\n * This is a private prefix and users should not use them directly\r\n */\r\nconst modulePrefix = '/@react-pages/'\r\nconst pagesModuleId = modulePrefix + 'pages'\r\nconst themeModuleId = modulePrefix + 'theme'\r\nconst ssrDataModuleId = modulePrefix + 'ssrData'\r\nconst allOutlineDataModuleId = modulePrefix + 'allPagesOutlines'\r\n\r\nconst tsInfoQueryReg = /\\?tsInfo=(.*)$/\r\n\r\nexport interface PluginConfig {\r\n  pagesDir?: string\r\n  pageStrategy?: PageStrategy\r\n  useHashRouter?: boolean\r\n  staticSiteGeneration?: staticSiteGenerationConfig\r\n}\r\n\r\nfunction pluginFactory(opts: PluginConfig = {}): Plugin {\r\n  const { useHashRouter = false, staticSiteGeneration } = opts\r\n\r\n  let isBuild: boolean\r\n  let pagesDir: string\r\n  let pageStrategy: PageStrategy\r\n  /** used as data source for PageStrategy and other dynamic-modules */\r\n  const virtualModulesManager = new VirtualModulesManager()\r\n  const demoModuleManager = new DemoModuleManager()\r\n  const tsInfoModuleManager = new TsInfoModuleManager()\r\n  const outlineInfoModuleManager = new OutlineInfoModuleManager()\r\n\r\n  return {\r\n    name: 'vite-plugin-react-pages',\r\n    enforce: 'pre',\r\n    config: (config, env) => ({\r\n      optimizeDeps: {\r\n        include: [\r\n          'react',\r\n          'react-dom',\r\n          'react-dom/client',\r\n          'react-router-dom',\r\n          '@mdx-js/react',\r\n        ],\r\n        exclude: ['vite-plugin-react-pages'],\r\n      },\r\n      define: {\r\n        __HASH_ROUTER__: !!useHashRouter,\r\n        'process.env.VITE_PAGES_IS_SSR': env.ssrBuild\r\n          ? JSON.stringify('true')\r\n          : JSON.stringify('false'),\r\n      },\r\n      build: {\r\n        rollupOptions: {\r\n          output: {\r\n            manualChunks: undefined,\r\n            // local rollup's types may not be compatible with vite's rollup types\r\n            plugins: [outputPluginDisableJekyll() as any],\r\n          },\r\n        },\r\n      },\r\n    }),\r\n    async configResolved({ root, plugins, logger, command }) {\r\n      isBuild = command === 'build'\r\n      pagesDir = opts.pagesDir ?? path.resolve(root, 'pages')\r\n      if (opts.pageStrategy) {\r\n        pageStrategy = opts.pageStrategy\r\n      } else {\r\n        pageStrategy = new DefaultPageStrategy()\r\n      }\r\n      const mdxPlugin = plugins.find(\r\n        (plugin) => plugin.name === 'vite-plugin-mdx'\r\n      )\r\n      if (mdxPlugin) {\r\n        throw new Error(\r\n          'You should not use vite-plugin-mdx with vite-plugin-react-pages. vite-pages v5 has buildin plugin for mdx.'\r\n        )\r\n      }\r\n    },\r\n    configureServer({ watcher, moduleGraph }) {\r\n      const reloadVirtualModule = (moduleId: string) => {\r\n        const module = moduleGraph.getModuleById(moduleId)\r\n        if (module) {\r\n          moduleGraph.invalidateModule(module)\r\n          watcher.emit('change', moduleId)\r\n        }\r\n      }\r\n\r\n      pageStrategy\r\n        .on('page-list', () => reloadVirtualModule(pagesModuleId))\r\n        .on('page', (pageIds: string[]) => {\r\n          pageIds.forEach((pageId) => {\r\n            reloadVirtualModule(pagesModuleId + pageId)\r\n          })\r\n        })\r\n\r\n      demoModuleManager.onUpdate(reloadVirtualModule)\r\n      tsInfoModuleManager.onUpdate(reloadVirtualModule)\r\n      outlineInfoModuleManager.onUpdate(reloadVirtualModule)\r\n    },\r\n    buildStart() {\r\n      // buildStart may be called multiple times\r\n      // if the port has already been taken and vite retry with another port\r\n\r\n      // pageStrategy.start can't be put in configResolved\r\n      // because vite's resolveConfig will call configResolved without calling close hook\r\n      pageStrategy.start(pagesDir, virtualModulesManager)\r\n    },\r\n    async resolveId(id, importer) {\r\n      if (id === appEntryId) return id\r\n      if (id.startsWith(modulePrefix)) return id\r\n      if (id.endsWith('?demo')) {\r\n        const bareImport = id.slice(0, 0 - '?demo'.length)\r\n        const resolved = await this.resolve(bareImport, importer)\r\n        if (!resolved || resolved.external)\r\n          throw new Error(`can not resolve demo: ${id}. importer: ${importer}`)\r\n        return demoModuleManager.registerProxyModule(resolved.id)\r\n      }\r\n      if (id.endsWith('?outlineInfo')) {\r\n        const bareImport = id.slice(0, 0 - '?outlineInfo'.length)\r\n        const resolved = await this.resolve(bareImport, importer)\r\n        if (!resolved || resolved.external)\r\n          throw new Error(\r\n            `can not resolve outlineInfo: ${id}. importer: ${importer}`\r\n          )\r\n        return outlineInfoModuleManager.registerProxyModule(resolved.id)\r\n      }\r\n      const matchTsInfo = id.match(tsInfoQueryReg)\r\n      if (matchTsInfo) {\r\n        const bareImport = id.replace(tsInfoQueryReg, '')\r\n        const resolved = await this.resolve(bareImport, importer)\r\n        if (!resolved || resolved.external)\r\n          throw new Error(\r\n            `can not resolve tsInfo: ${id}. importer: ${importer}`\r\n          )\r\n        const exportName = matchTsInfo[1]\r\n        return tsInfoModuleManager.registerProxyModule(resolved.id, exportName)\r\n      }\r\n      return undefined\r\n    },\r\n    async load(id) {\r\n      // vite will resolve it with v=${versionHash} query\r\n      // so that this import can be cached\r\n      if (id === appEntryId)\r\n        return `import \"vite-plugin-react-pages/dist/client-bundles/entries/csr.mjs\";`\r\n      // page list\r\n      if (id === pagesModuleId) {\r\n        return renderPageList(await pageStrategy.getPages(), isBuild)\r\n      }\r\n      // one page data\r\n      if (id.startsWith(pagesModuleId + '/')) {\r\n        let pageId = id.slice(pagesModuleId.length)\r\n        if (pageId === '/index__') pageId = '/'\r\n        const page = await pageStrategy.getPage(pageId)\r\n        if (!page) {\r\n          throw Error(`Page not found: ${pageId}`)\r\n        }\r\n        return renderOnePageData(page.data)\r\n      }\r\n      if (id === themeModuleId) {\r\n        return `export { default } from \"${await resolveTheme(pagesDir)}\";`\r\n      }\r\n      if (id === ssrDataModuleId) {\r\n        return renderPageListInSSR(await pageStrategy.getPages())\r\n      }\r\n      if (demoModuleManager.isProxyModuleId(id)) {\r\n        return demoModuleManager.loadProxyModule(id)\r\n      }\r\n      if (outlineInfoModuleManager.isProxyModuleId(id)) {\r\n        return outlineInfoModuleManager.loadProxyModule(id)\r\n      }\r\n      if (id === allOutlineDataModuleId) {\r\n        return renderAllPagesOutlines(await pageStrategy.getPages())\r\n      }\r\n      if (tsInfoModuleManager.isProxyModuleId(id)) {\r\n        return tsInfoModuleManager.loadProxyModule(id)\r\n      }\r\n    },\r\n    closeBundle() {\r\n      virtualModulesManager.close()\r\n      demoModuleManager.close()\r\n      tsInfoModuleManager.close()\r\n      outlineInfoModuleManager.close()\r\n    },\r\n    transformIndexHtml(html, ctx) {\r\n      return moveScriptTagToBodyEnd(html, ctx)\r\n    },\r\n    // Read by the cli script to get staticSiteGeneration config\r\n    // @ts-expect-error\r\n    vitePagesStaticSiteGeneration: staticSiteGeneration,\r\n  }\r\n}\r\n\r\nexport type {\r\n  Theme,\r\n  LoadState,\r\n  PagesLoaded,\r\n  PagesStaticData,\r\n  TsInfo,\r\n  TsPropertyOrMethodInfo,\r\n} from '../../clientTypes'\r\n\r\nexport type { FileHandler } from './page-strategy/types.doc'\r\nexport { extractStaticData, File } from './utils/virtual-module'\r\nexport { PageStrategy }\r\nexport { DefaultPageStrategy, defaultFileHandler }\r\n\r\n/**\r\n * vite put script before style, which cause style problem for antd\r\n * so we move the script tag to the end of the body\r\n * https://github.com/vitejs/vite/blob/4112c5d103673b83c50d446096086617dfaac5a3/packages/vite/src/node/plugins/html.ts#L352\r\n */\r\nfunction moveScriptTagToBodyEnd(\r\n  html: string,\r\n  ctx: IndexHtmlTransformContext\r\n): string | undefined {\r\n  if (ctx.chunk) {\r\n    const reg = new RegExp(\r\n      `<script\\\\s[^>]*?${ctx.chunk.fileName}[^<]*?<\\\\/script>`\r\n    )\r\n    const match = html.match(reg)\r\n    if (match) {\r\n      const script = match[0]\r\n      html = html.replace(script, '')\r\n      return injectHTMLTag(html, script)\r\n    }\r\n  }\r\n}\r\n\r\nexport default async function setupPlugins(\r\n  vpConfig: PluginConfig = {}\r\n): Promise<Plugin[]> {\r\n  // use dynamic import so that it supports node commonjs\r\n  const mdx = await import('@mdx-js/rollup')\r\n  return [\r\n    mdx.default({\r\n      remarkPlugins: await getRemarkPlugins(),\r\n      rehypePlugins: await getRehypePlugins(),\r\n      // treat .md as mdx\r\n      mdExtensions: [],\r\n      mdxExtensions: ['.md', '.mdx'],\r\n      providerImportSource: '@mdx-js/react',\r\n    }),\r\n    createMdxTransformPlugin(),\r\n    pluginFactory(vpConfig),\r\n  ] as Plugin[]\r\n}\r\n\r\nfunction getRemarkPlugins(): Promise<PluggableList> {\r\n  return Promise.all([\r\n    // use dynamic import so that it works in node commonjs\r\n    import('remark-frontmatter').then((m) => m.default),\r\n    import('remark-gfm').then((m) => m.default),\r\n    import('remark-mdx-images').then((m) => m.default),\r\n    import('remark-math').then((m) => m.default),    \r\n\r\n    // plugins created for vite-pages:\r\n    DemoMdxPlugin,\r\n    TsInfoMdxPlugin,\r\n    FileTextMdxPlugin,\r\n  ])\r\n}\r\n\r\nfunction getRehypePlugins(): Promise<PluggableList> {\r\n  return Promise.all([\r\n    // use dynamic import so that it works in node commonjs\r\n    import('rehype-slug').then((m) => m.default),\r\n    import('rehype-katex').then((m) => m.default),\r\n  ])\r\n}\r\n\r\n/**\r\n * use @vitejs/plugin-react to handle the output of @mdx-js/rollup\r\n * workaround this issue: https://github.com/vitejs/vite-plugin-react/issues/38\r\n */\r\nfunction createMdxTransformPlugin(): Plugin {\r\n  let vitePluginReactTrasnform: Plugin['transform'] | undefined\r\n  return {\r\n    name: 'vite-pages:mdx-transform',\r\n    configResolved: ({ plugins }) => {\r\n      // find this plugin to call it's transform function:\r\n      // https://github.com/vitejs/vite-plugin-react/blob/b647e74c38565696bd6fb931b8bd9ac7f3bebe88/packages/plugin-react/src/index.ts#L206\r\n      vitePluginReactTrasnform = plugins.find(\r\n        (p) =>\r\n          p.name === 'vite:react-babel' && typeof p.transform === 'function'\r\n      )?.transform\r\n      if (!vitePluginReactTrasnform) {\r\n        throw new Error(\r\n          `Can't find an instance of @vitejs/plugin-react. You should apply this plugin to make mdx work.`\r\n        )\r\n      }\r\n    },\r\n    transform: (code, id, options) => {\r\n      const [filepath, querystring = ''] = id.split('?')\r\n      if (\r\n        filepath.match(/\\.mdx?$/) &&\r\n        !id.startsWith(OUTLINE_INFO_MODULE_ID_PREFIX)\r\n      ) {\r\n        // make @vitejs/plugin-react treat the \"output of @mdx-js/rollup transform\" like a jsx file\r\n        // https://github.com/vitejs/vite-plugin-react/blob/b647e74c38565696bd6fb931b8bd9ac7f3bebe88/packages/plugin-react/src/index.ts#L215\r\n        let newId\r\n        if (querystring) {\r\n          newId = id + '&ext=.jsx'\r\n        } else {\r\n          newId = id + '?ext=.jsx'\r\n        }\r\n        return (vitePluginReactTrasnform as any)(code, newId, options)\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\n/**\r\n * Some chunk filenames may start with `_`, which will be treated as special resource by github pages. So we need to disable jekyll of github pages.\r\n * https://github.blog/2009-12-29-bypassing-jekyll-on-github-pages/\r\n */\r\nfunction outputPluginDisableJekyll(): OutputPlugin {\r\n  return {\r\n    name: 'vite-pages-disable-jekyll',\r\n    generateBundle() {\r\n      this.emitFile({\r\n        type: 'asset',\r\n        fileName: '.nojekyll',\r\n        source: '',\r\n      })\r\n    },\r\n  }\r\n}\r\n"],"names":["extractStaticData","file","code","read","extname","data","frontmatter","grayMatter","staticData","sourceType","__sourceFilePath","path","title","undefined","extractMarkdownTitle","parse","extract","Error","match","PendingTaskCounter","count","callbacks","countTask","ended","forEach","cb","length","callOnceWhenIdle","push","countPendingState","pendingState","stopCounting","onStateChange","isPending","PendingState","_isPending","value","cbs","filter","v","File","content","constructor","base","relative","posix","slice","fs","readFile","VirtualModuleGraph","modules","Map","updateQueue","UpdateQueue","updateQueueEmptyState","getModuleIds","ids","Array","from","keys","getModuleData","moduleId","module","get","getData","getModules","entries","scheduleUpdate","updaterId","updater","size","setTimeout","executeUpdates","addModuleListener","handler","_addModuleListener","prevData","moduleUpdateListeners","index","indexOf","splice","callModuleUpdateListeners","updatedModules","moduleUpdateListener","id","updateExecutingState","executeUpdates_Inner","depth","MAX_CASCADE_UPDATE_DEPTH","recordAffectedModule","has","set","update","pop","cleanupEdgesWithUpdaterId","disableAPIs","apis","createUpdateAPIs","outdated","_this","OUTDATED_ERROR_MSG","addModuleData","upstreamModuleId","fromModule","ensureModule","toModule","Edge","addEdge","deleteModule","delete","result","Module","map","downstream","edge","to","unlink","Set","add","bindEdgeWithUpdaterId","hasUnlinked","unbindEdgeWithUpdaterId","mapUpdaterIdToEdges","edges","clear","Update","queue","shift","nextWatcherId","VirtualModulesManager","watchers","virtualModules","fileCache","pendingTaskCounter","addFSWatcher","baseDir","globs","fileHandler","watcherId","String","fsScanFinish","chokidar","watch","cwd","ignored","on","handleFileChange","handleFileUnLink","getModule","_getModulesNow","_getModuleDataNow","close","w","filePath","slash","join","handlerAPI","ProxyModulesManager","vmm","register","proxyModulePrefix","registerProxyModule","sourceFilePath","getProxyModuleData","key","proxyModuleId","getProxyModuleId","api","proxyModuleData","Promise","res","rej","moduleData","isArray","onProxyModuleUpdate","prefix","isProxyModuleId","startsWith","PageUpdateBuffer","EventEmitter","pageUpdateBuffer","pageListUpdateBuffer","scheduleFlush","debounce","havePageUpdate","updates","values","emit","type","dataType","pageId","JSON","stringify","batchUpdate","exec","PAGE_MODULE_PREFIX","ensurePageId","ensureModuleId","isPageRelatedModule","PagesDataKeeper","pages","virtualModulesManager","Object","setPageData","getPages","fromEntries","page","transformOnePageDataInternal","getPage","rawData","oldPageData","pageData","createPageDataFromRaw","dequal","runtimeData","dataMap","staticDataMap","dataPath","priority","isEmptyPage","lowerAPI","pageAPIs","createPageAPIs","addPageData","createOneTimePageAPIs","updaterAPIs","getRuntimeData","getDataObject","setData","existValue","createProxy","getStaticData","dataPiece","Proxy","defaultProxyTraps","target","Reflect","ownKeys","getOwnPropertyNames","fnName","PageStrategy","pagesDir","pagesDataKeeper","started","findPages","start","virtualModuleAPIs","oneTimePageAPIs","helpers","createHelpers","resolve","defaultFileHandler","watchFiles","arg2","arg3","DefaultPageStrategy","opts","extraFindPages","helpersFromParent","pagePublicPath","getPagePublicPath","relativePageFilePath","replace","_","paramName","renderPageList","pagesData","isBuild","addPagesData","subPath","dataModulePath","cleanStaticData","renderPageListInSSR","renderOnePageData","onePageData","importModule","dataKey","idx","renderAllPagesOutlines","index1","outlinesForThisPage","index2","varName","importOutlineInfo","resolveTheme","pagesDirPath","filename","pathExists","createNameSpaceImportNode","name","estree","body","specifiers","local","source","raw","createDefaultImportNode","createJSXWithSpreadPropsNode","Component","props","_mdxExplicitJsx","children","attributes","expression","properties","argument","DemoMdxPlugin","transformer","tree","addImports","child","srcAttr","find","attr","srcValue","nextIndex","unshift","DEMO_PROXY_PREFIX","DemoModuleManager","pmm","demoPath","strip","loadProxyModule","demoProxyId","description","desc","onUpdate","defaultTsConfig","ts","ScriptTarget","ESNext","lib","moduleResolution","ModuleResolutionKind","NodeJs","collectInterfaceInfo","fileName","exportName","options","project","Project","compilerOptions","sourceFile","addSourceFileAtPath","typeChecker","getTypeChecker","exportedDeclarations","getExportedDeclarations","node","Node","isTypeAliasDeclaration","getName","getJsDocs","jsDoc","getDescription","trim","typeNode","getTypeNode","isTypeLiteral","members","handleTypeElementMembered","text","getText","includeJsDocComments","trimLeadingIndentation","isInterfaceDeclaration","getKindName","nodeType","getType","getProperties","prop","displayPartsToString","compilerSymbol","getDocumentationComment","compilerObject","getTypeAtLocation","defaultValue","getJsDocTags","tag","includes","toLowerCase","optional","isOptional","TsInfoMdxPlugin","nameAttr","nameValue","PROXY_PREFIX","TsInfoModuleManager","sourcePath","tsInfo","bodyInjectRE","injectHTMLTag","html","tagHtml","test","FileTextMdxPlugin","syntaxAttr","syntaxValue","createFileTextJSXNode","syntax","extractOutlineInfo","md","remark","default","remarkMdx","gfm","visit","toString","Slugger","ast","use","slugs","headings","includeImageAlt","hProperties","slug","outline","OUTLINE_INFO_MODULE_ID_PREFIX","OutlineInfoModuleManager","datasourceFilePath","invariant","prevOutline","appEntryId","modulePrefix","pagesModuleId","themeModuleId","ssrDataModuleId","allOutlineDataModuleId","tsInfoQueryReg","pluginFactory","useHashRouter","staticSiteGeneration","pageStrategy","demoModuleManager","tsInfoModuleManager","outlineInfoModuleManager","enforce","config","env","optimizeDeps","include","exclude","define","__HASH_ROUTER__","ssrBuild","build","rollupOptions","output","manualChunks","plugins","outputPluginDisableJekyll","configResolved","root","logger","command","mdxPlugin","plugin","configureServer","watcher","moduleGraph","reloadVirtualModule","getModuleById","invalidateModule","pageIds","buildStart","resolveId","importer","endsWith","bareImport","resolved","external","matchTsInfo","load","closeBundle","transformIndexHtml","ctx","moveScriptTagToBodyEnd","vitePagesStaticSiteGeneration","chunk","reg","RegExp","script","setupPlugins","vpConfig","mdx","remarkPlugins","getRemarkPlugins","rehypePlugins","getRehypePlugins","mdExtensions","mdxExtensions","providerImportSource","createMdxTransformPlugin","all","then","m","vitePluginReactTrasnform","p","transform","filepath","querystring","split","newId","generateBundle","emitFile"],"mappings":"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"}